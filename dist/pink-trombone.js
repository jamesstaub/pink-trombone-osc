/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/osc-js/lib/osc.min.js":
/*!********************************************!*\
  !*** ./node_modules/osc-js/lib/osc.min.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, Buffer) {!function(t,e){ true?module.exports=e():undefined}(this,(function(){\"use strict\";function t(t,n,r){return n=f(n),function(t,e){if(e&&(\"object\"==typeof e||\"function\"==typeof e))return e;if(void 0!==e)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t)}(t,e()?Reflect.construct(n,r||[],f(t).constructor):n.apply(t,r))}function e(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(e=function(){return!!t})()}function n(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function r(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){u(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t){var e=function(t,e){if(\"object\"!=typeof t||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||\"default\");if(\"object\"!=typeof r)return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"==typeof e?e:e+\"\"}function i(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,o(r.key),r)}}function a(t,e,n){return e&&s(t.prototype,e),n&&s(t,n),Object.defineProperty(t,\"prototype\",{writable:!1}),t}function u(t,e,n){return(e=o(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,\"prototype\",{writable:!1}),e&&l(t,e)}function f(t){return f=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},f(t)}function l(t,e){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},l(t,e)}function h(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=f(t)););return t}function p(){return p=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=h(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},p.apply(this,arguments)}function d(t){return Number(t)===t&&t%1==0}function v(t){return Number(t)===t}function w(t){return\"string\"==typeof t}function y(t){return\"boolean\"==typeof t}function g(t){return t===1/0}function k(t){return\"[object Array]\"===Object.prototype.toString.call(t)}function b(t){return\"[object Object]\"===Object.prototype.toString.call(t)}function m(t){return\"function\"==typeof t}function S(t){return t instanceof Uint8Array}function E(t){return t instanceof Date}function O(t){return void 0===t}function C(t){return null===t}function P(t){return t+3&-4}function A(t){return Object.prototype.hasOwnProperty.call(\"undefined\"!=typeof global?global:window,t)}function I(t){return t.buffer?new DataView(t.buffer):t instanceof ArrayBuffer?new DataView(t):new DataView(new Uint8Array(t))}function j(t){if(d(t))return\"i\";if(e=t,Number(e)===e&&e%1!=0)return\"f\";if(w(t))return\"s\";if(S(t))return\"b\";if(y(t))return t?\"T\":\"F\";if(C(t))return\"N\";if(g(t))return\"I\";var e;throw new Error(\"OSC typeTag() found unknown value type\")}function D(t){var e=\"\";if(k(t))return\"/\".concat(t.join(\"/\"));if(w(t))return(e=t).length>1&&\"/\"===e[e.length-1]&&(e=e.slice(0,e.length-1)),e.length>1&&\"/\"!==e[0]&&(e=\"/\".concat(e)),e;throw new Error(\"OSC prepareAddress() needs addresses of type array or string\")}function B(t){if(!w(t))throw new Error(\"OSC prepareRegExPattern() needs strings\");return t.replace(/\\./g,\"\\\\.\").replace(/\\(/g,\"\\\\(\").replace(/\\)/g,\"\\\\)\").replace(/\\{/g,\"(\").replace(/\\}/g,\")\").replace(/,/g,\"|\").replace(/\\[!/g,\"[^\").replace(/\\?/g,\".\").replace(/\\*/g,\".*\")}var M=a((function t(){i(this,t),this.data=[],this.byteLength=0}),[{key:\"add\",value:function(t){if(y(t)||g(t)||C(t))return this;var e=t.pack();return this.byteLength+=e.byteLength,this.data.push(e),this}},{key:\"merge\",value:function(){var t=new Uint8Array(this.byteLength),e=0;return this.data.forEach((function(n){t.set(n,e),e+=n.byteLength})),t}}]),x=a((function t(e){i(this,t),this.value=e,this.offset=0}),[{key:\"pack\",value:function(t,e){if(!t||!e)throw new Error(\"OSC Atomic cant't be packed without given method or byteLength\");var n=new Uint8Array(e),r=new DataView(n.buffer);if(O(this.value))throw new Error(\"OSC Atomic cant't be encoded with empty value\");return r[t](this.offset,this.value,!1),n}},{key:\"unpackWithMethod\",value:function(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(!(t&&e&&n))throw new Error(\"OSC Atomic cant't be unpacked without given dataView, method or byteLength\");if(!(t instanceof DataView))throw new Error(\"OSC Atomic expects an instance of type DataView\");return this.value=t[e](r,!1),this.offset=r+n,this.offset}}]),T=function(e){function n(e){if(i(this,n),e&&!d(e))throw new Error(\"OSC AtomicInt32 constructor expects value of type number\");return t(this,n,[e])}return c(n,e),a(n,[{key:\"pack\",value:function(){return p(f(n.prototype),\"pack\",this).call(this,\"setInt32\",4)}},{key:\"unpack\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return p(f(n.prototype),\"unpackWithMethod\",this).call(this,t,\"getInt32\",4,e)}}])}(x),H=\"utf-8\";function L(t){if(A(\"Buffer\"))return Buffer.from(t).toString(H);if(A(\"TextDecoder\"))return new TextDecoder(H).decode(new Int8Array(t));for(var e=\"\",n=0;n<t.length;n+=65537)e+=String.fromCharCode.apply(null,t.slice(n,n+65537));return e}var N=function(e){function n(e){if(i(this,n),e&&!w(e))throw new Error(\"OSC AtomicString constructor expects value of type string\");return t(this,n,[e])}return c(n,e),a(n,[{key:\"pack\",value:function(){if(O(this.value))throw new Error(\"OSC AtomicString can not be encoded with empty value\");for(var t=\"\".concat(this.value,\"\\0\"),e=P(t.length),n=new Uint8Array(e),r=0;r<t.length;r+=1)n[r]=t.charCodeAt(r);return n}},{key:\"unpack\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!(t instanceof DataView))throw new Error(\"OSC AtomicString expects an instance of type DataView\");for(var n,r=e,o=[];r<t.byteLength;r+=1){if(0===(n=t.getUint8(r))){r+=1;break}o.push(n)}if(r===t.length)throw new Error(\"OSC AtomicString found a malformed OSC string\");return this.offset=P(r),this.value=L(o),this.offset}}])}(x),V=2208988800,W=4294967296,U=a((function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(i(this,t),!d(e)||!d(n))throw new Error(\"OSC Timetag constructor expects values of type integer number\");this.seconds=e,this.fractions=n}),[{key:\"timestamp\",value:function(t){var e;if(\"number\"==typeof t){e=t/1e3;var n=Math.floor(e);return this.seconds=n+V,this.fractions=Math.round(W*(e-n)),t}return 1e3*((e=this.seconds-V)+Math.round(this.fractions/W))}}]),_=function(e){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Date.now();i(this,n);var r=new U;return e instanceof U?r=e:d(e)?r.timestamp(e):E(e)&&r.timestamp(e.getTime()),t(this,n,[r])}return c(n,e),a(n,[{key:\"pack\",value:function(){if(O(this.value))throw new Error(\"OSC AtomicTimetag can not be encoded with empty value\");var t=this.value,e=t.seconds,n=t.fractions,r=new Uint8Array(8),o=new DataView(r.buffer);return o.setInt32(0,e,!1),o.setInt32(4,n,!1),r}},{key:\"unpack\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!(t instanceof DataView))throw new Error(\"OSC AtomicTimetag expects an instance of type DataView\");var n=t.getUint32(e,!1),r=t.getUint32(e+4,!1);return this.value=new U(n,r),this.offset=e+8,this.offset}}])}(x),F=function(e){function n(e){if(i(this,n),e&&!S(e))throw new Error(\"OSC AtomicBlob constructor expects value of type Uint8Array\");return t(this,n,[e])}return c(n,e),a(n,[{key:\"pack\",value:function(){if(O(this.value))throw new Error(\"OSC AtomicBlob can not be encoded with empty value\");var t=P(this.value.byteLength),e=new Uint8Array(t+4);return new DataView(e.buffer).setInt32(0,this.value.byteLength,!1),e.set(this.value,4),e}},{key:\"unpack\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!(t instanceof DataView))throw new Error(\"OSC AtomicBlob expects an instance of type DataView\");var n=t.getInt32(e,!1);return this.value=new Uint8Array(t.buffer,e+4,n),this.offset=P(e+4+n),this.offset}}])}(x),R=function(e){function n(e){if(i(this,n),e&&!v(e))throw new Error(\"OSC AtomicFloat32 constructor expects value of type float\");return t(this,n,[e])}return c(n,e),a(n,[{key:\"pack\",value:function(){return p(f(n.prototype),\"pack\",this).call(this,\"setFloat32\",4)}},{key:\"unpack\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return p(f(n.prototype),\"unpackWithMethod\",this).call(this,t,\"getFloat32\",4,e)}}])}(x),z=function(e){function n(e){if(i(this,n),e&&!v(e))throw new Error(\"OSC AtomicFloat64 constructor expects value of type float\");return t(this,n,[e])}return c(n,e),a(n,[{key:\"pack\",value:function(){return p(f(n.prototype),\"pack\",this).call(this,\"setFloat64\",8)}},{key:\"unpack\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return p(f(n.prototype),\"unpackWithMethod\",this).call(this,t,\"getFloat64\",8,e)}}])}(x),G=BigInt(\"9223372036854775807\"),Z=BigInt(\"-9223372036854775808\"),q=function(e){function n(e){if(i(this,n),e&&\"bigint\"!=typeof e)throw new Error(\"OSC AtomicInt64 constructor expects value of type BigInt\");if(e&&(e<Z||e>G))throw new Error(\"OSC AtomicInt64 value is out of bounds\");var r;return e&&(r=BigInt.asIntN(64,e)),t(this,n,[r])}return c(n,e),a(n,[{key:\"pack\",value:function(){return p(f(n.prototype),\"pack\",this).call(this,\"setBigInt64\",8)}},{key:\"unpack\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return p(f(n.prototype),\"unpackWithMethod\",this).call(this,t,\"getBigInt64\",8,e)}}])}(x),J=BigInt(\"18446744073709551615\"),K=function(e){function n(e){if(i(this,n),e&&\"bigint\"!=typeof e)throw new Error(\"OSC AtomicUInt64 constructor expects value of type BigInt\");if(e&&(e<0||e>J))throw new Error(\"OSC AtomicUInt64 value is out of bounds\");var r;return e&&(r=BigInt.asUintN(64,e)),t(this,n,[r])}return c(n,e),a(n,[{key:\"pack\",value:function(){return p(f(n.prototype),\"pack\",this).call(this,\"setBigUint64\",8)}},{key:\"unpack\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return p(f(n.prototype),\"unpackWithMethod\",this).call(this,t,\"getBigUint64\",8,e)}}])}(x),Q=!0,X=!1,Y=null,$=1/0,tt=a((function t(e,n){var r=this;if(i(this,t),this.offset=0,this.address=\"\",this.types=\"\",this.args=[],!O(e)){if(!w(e)&&!k(e))throw new Error(\"OSC Message constructor first argument (address) must be a string or array\");this.address=D(e)}if(!O(n)){if(!k(n))throw new Error(\"OSC Message constructor second argument (args) must be an array\");n.forEach((function(t){return r.add(t.type,t.value)}))}}),[{key:\"add\",value:function(t,e){if(O(t))throw new Error(\"OSC Message needs a valid OSC Atomic Data Type\");\"N\"===t?this.args.push(Y):\"T\"===t?this.args.push(Q):\"F\"===t?this.args.push(X):\"I\"===t?this.args.push($):this.args.push(e),this.types+=t}},{key:\"pack\",value:function(){var t=this;if(0===this.address.length||\"/\"!==this.address[0])throw new Error(\"OSC Message has an invalid address\");var e=new M;if(e.add(new N(this.address)),e.add(new N(\",\".concat(this.types))),this.args.length>0){var n;if(this.args.length>this.types.length)throw new Error(\"OSC Message argument and type tag mismatch\");this.args.forEach((function(r,o){var i=t.types[o];if(\"i\"===i)n=new T(r);else if(\"h\"===i)n=new q(r);else if(\"t\"===i)n=new K(r);else if(\"f\"===i)n=new R(r);else if(\"d\"===i)n=new z(r);else if(\"s\"===i)n=new N(r);else if(\"b\"===i)n=new F(r);else if(\"T\"===i)n=Q;else if(\"F\"===i)n=X;else if(\"N\"===i)n=Y;else{if(\"I\"!==i)throw new Error(\"OSC Message found unknown argument type\");n=$}e.add(n)}))}return e.merge()}},{key:\"unpack\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!(t instanceof DataView))throw new Error(\"OSC Message expects an instance of type DataView.\");var n=new N;n.unpack(t,e);var r=new N;if(r.unpack(t,n.offset),0===n.value.length||\"/\"!==n.value[0])throw new Error(\"OSC Message found malformed or missing address string\");if(0===r.value.length&&\",\"!==r.value[0])throw new Error(\"OSC Message found malformed or missing type string\");for(var o,i,s=r.offset,a=[],u=1;u<r.value.length;u+=1){if(o=null,\"i\"===(i=r.value[u]))o=new T;else if(\"h\"===i)o=new q;else if(\"t\"===i)o=new K;else if(\"f\"===i)o=new R;else if(\"d\"===i)o=new z;else if(\"s\"===i)o=new N;else if(\"b\"===i)o=new F;else if(\"T\"===i)a.push(Q);else if(\"F\"===i)a.push(X);else if(\"N\"===i)a.push(Y);else{if(\"I\"!==i)throw new Error(\"OSC Message found unsupported argument type\");a.push($)}o&&(s=o.unpack(t,s),a.push(o.value))}return this.offset=s,this.address=n.value,this.types=r.value,this.args=a,this.offset}}]),et=function(e){function n(e){var r,o;i(this,n);for(var s=arguments.length,a=new Array(s>1?s-1:0),u=1;u<s;u++)a[u-1]=arguments[u];return a.length>0&&a[0]instanceof Array&&(o=a.shift()),r=t(this,n,[e,o]),a.length>0&&(r.types=a.map((function(t){return j(t)})).join(\"\"),r.args=a),r}return c(n,e),a(n,[{key:\"add\",value:function(t){p(f(n.prototype),\"add\",this).call(this,j(t),t)}}])}(tt),nt=\"#bundle\",rt=function(){function t(){var e=this;i(this,t),this.offset=0,this.timetag=new _,this.bundleElements=[];for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];r.length>0&&(r[0]instanceof Date||d(r[0])?this.timetag=new _(r[0]):k(r[0])?(r[0].forEach((function(t){e.add(t)})),r.length>1&&(r[1]instanceof Date||d(r[1]))&&(this.timetag=new _(r[1]))):r.forEach((function(t){e.add(t)})))}return a(t,[{key:\"timestamp\",value:function(t){if(!d(t))throw new Error(\"OSC Bundle needs an integer for setting the timestamp\");this.timetag=new _(t)}},{key:\"add\",value:function(e){if(!(e instanceof et||e instanceof t))throw new Error(\"OSC Bundle contains only Messages and Bundles\");this.bundleElements.push(e)}},{key:\"pack\",value:function(){var t=new M;return t.add(new N(nt)),this.timetag||(this.timetag=new _),t.add(this.timetag),this.bundleElements.forEach((function(e){t.add(new T(e.pack().byteLength)),t.add(e)})),t.merge()}},{key:\"unpack\",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!(e instanceof DataView))throw new Error(\"OSC Bundle expects an instance of type DataView\");var r=new N;if(r.unpack(e,n),r.value!==nt)throw new Error(\"OSC Bundle does not contain a valid #bundle head\");var o=new _,i=o.unpack(e,r.offset);for(this.bundleElements=[];i<e.byteLength;){var s=new N,a=new T;i=a.unpack(e,i);var u=void 0;s.unpack(e,i),i=(u=s.value===nt?new t:new et).unpack(e,i),this.bundleElements.push(u)}return this.offset=i,this.timetag=o,this.offset}}])}(),ot=a((function t(e){if(i(this,t),e&&!(e instanceof et||e instanceof rt))throw new Error(\"OSC Packet value has to be Message or Bundle\");this.value=e,this.offset=0}),[{key:\"pack\",value:function(){if(!this.value)throw new Error(\"OSC Packet can not be encoded with empty body\");return this.value.pack()}},{key:\"unpack\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!(t instanceof DataView))throw new Error(\"OSC Packet expects an instance of type DataView\");if(t.byteLength%4!=0)throw new Error(\"OSC Packet byteLength has to be a multiple of four\");var n,r=new N;return r.unpack(t,e),(n=r.value===nt?new rt:new et).unpack(t,e),this.offset=n.offset,this.value=n,this.offset}}]),it={discardLateMessages:!1},st=a((function t(e){i(this,t),this.options=r(r({},it),e),this.addressHandlers=[],this.eventHandlers={open:[],error:[],close:[]},this.uuid=0}),[{key:\"dispatch\",value:function(t,e){var n=this;if(!(t instanceof ot))throw new Error(\"OSC EventHander dispatch() accepts only arguments of type Packet\");if(!t.value)throw new Error(\"OSC EventHander dispatch() can't read empty Packets\");if(t.value instanceof rt){var r=t.value;return r.bundleElements.forEach((function(t){if(t instanceof rt){if(r.timetag.value.timestamp()<t.timetag.value.timestamp())throw new Error(\"OSC Bundle timestamp is older than the timestamp of enclosed Bundles\");return n.dispatch(new ot(t))}if(t instanceof et){var o=t;return n.notify(o.address,o,r.timetag.value.timestamp(),e)}throw new Error(\"OSC EventHander dispatch() can't dispatch unknown Packet value\")}))}if(t.value instanceof et){var o=t.value;return this.notify(o.address,o,0,e)}throw new Error(\"OSC EventHander dispatch() can't dispatch unknown Packet value\")}},{key:\"call\",value:function(t,e,n){var r=!1;if(w(t)&&t in this.eventHandlers)return this.eventHandlers[t].forEach((function(t){t.callback(e,n),r=!0})),r;var o=Object.keys(this.addressHandlers),i=this.addressHandlers;return o.forEach((function(o){var s=!1,a=new RegExp(B(D(t)),\"g\");if(a.test(o)&&o.length===a.lastIndex&&(s=!0),!s){var u=new RegExp(B(D(o)),\"g\");u.test(t)&&t.length===u.lastIndex&&(s=!0)}s&&i[o].forEach((function(t){t.callback(e,n),r=!0}))})),r}},{key:\"notify\",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];if(0===e.length)throw new Error(\"OSC EventHandler can not be called without any argument\");try{if(e[0]instanceof ot)return this.dispatch(e[0],e[1]);if(e[0]instanceof rt||e[0]instanceof et)return this.dispatch(new ot(e[0]),e[1]);if(!w(e[0])){var r=new ot;return r.unpack(I(e[0])),this.dispatch(r,e[1])}var o=e[0],i=null;e.length>1&&(i=e[1]);var s=null;if(e.length>2)if(d(e[2]))s=e[2];else{if(!(e[2]instanceof Date))throw new Error(\"OSC EventHandler timestamp has to be a number or Date\");s=e[2].getTime()}var a=null;if(e.length>=3&&(a=e[3]),s){var u=Date.now();if(u>s&&!this.options.discardLateMessages)return this.call(o,i,a);var c=this;return setTimeout((function(){c.call(o,i,a)}),s-u),!0}return this.call(o,i,a)}catch(t){return this.notify(\"error\",t),!1}}},{key:\"on\",value:function(t,e){if(!w(t)&&!k(t))throw new Error(\"OSC EventHandler accepts only strings or arrays for address patterns\");if(!m(e))throw new Error(\"OSC EventHandler callback has to be a function\");this.uuid+=1;var n={id:this.uuid,callback:e};if(w(t)&&t in this.eventHandlers)return this.eventHandlers[t].push(n),this.uuid;var r=D(t);return r in this.addressHandlers||(this.addressHandlers[r]=[]),this.addressHandlers[r].push(n),this.uuid}},{key:\"off\",value:function(t,e){if(!w(t)&&!k(t))throw new Error(\"OSC EventHandler accepts only strings or arrays for address patterns\");if(!d(e))throw new Error(\"OSC EventHandler subscription id has to be a number\");var n,r;return w(t)&&t in this.eventHandlers?(n=t,r=this.eventHandlers):(n=D(t),r=this.addressHandlers),n in r&&r[n].some((function(t,o){return t.id===e&&(r[n].splice(o,1),!0)}))}}]),at=a((function t(){if(i(this,t),this.constructor===t)throw new Error(\"Plugin is an abstract class. Please create or use an implementation!\")}),[{key:\"status\",value:function(){throw new Error(\"Abstract method!\")}},{key:\"open\",value:function(){throw new Error(\"Abstract method!\")}},{key:\"close\",value:function(){throw new Error(\"Abstract method!\")}},{key:\"send\",value:function(t){throw new Error(\"Abstract method!\")}}]),ut=0,ct=1,ft=2,lt=3,ht=function(e){function n(){throw i(this,n),t(this,n),new Error(\"DatagramPlugin can not be used in browser context\")}return c(n,e),a(n,[{key:\"registerNotify\",value:function(t){this.notify=t}},{key:\"status\",value:function(){return this.socketStatus}},{key:\"open\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=r(r({},this.options.open),e),o=n.port,i=n.exclusive;this.socketStatus=ut,this.socket.bind({address:n.host,port:o,exclusive:i},(function(){t.socketStatus=ct,t.notify(\"open\")}))}},{key:\"close\",value:function(){var t=this;this.socketStatus=ft,this.socket.close((function(){t.socketStatus=lt,t.notify(\"close\")}))}},{key:\"send\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=r(r({},this.options.send),e),o=n.port,i=n.host;this.socket.send(Buffer.from(t),0,t.byteLength,o,i)}}])}(at);var pt=\"undefined\"!=typeof WebSocket?WebSocket:\"undefined\"!=typeof MozWebSocket?MozWebSocket:\"undefined\"!=typeof global?global.WebSocket||global.MozWebSocket:\"undefined\"!=typeof window?window.WebSocket||window.MozWebSocket:\"undefined\"!=typeof self?self.WebSocket||self.MozWebSocket:void 0,dt=void 0,vt=0,wt=1,yt=2,gt=3,kt={udpServer:{host:\"localhost\",port:41234,exclusive:!1},udpClient:{host:\"localhost\",port:41235},wsServer:{host:\"localhost\",port:8080},receiver:\"ws\"};function bt(t,e){return r(r(r(r({},kt),t),e),{},{udpServer:r(r(r({},kt.udpServer),t.udpServer),e.udpServer),udpClient:r(r(r({},kt.udpClient),t.udpClient),e.udpClient),wsServer:r(r(r({},kt.wsServer),t.wsServer),e.wsServer)})}var mt=function(e){function n(){throw i(this,n),t(this,n),new Error(\"BridgePlugin can not be used in browser context\")}return c(n,e),a(n,[{key:\"registerNotify\",value:function(t){this.notify=t}},{key:\"status\",value:function(){return this.socketStatus}},{key:\"open\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=bt(this.options,e);this.socketStatus=vt,this.socket.bind({address:n.udpServer.host,port:n.udpServer.port,exclusive:n.udpServer.exclusive},(function(){var e={};n.wsServer.server?e.server=n.wsServer.server:e=n.wsServer,t.websocket=new dt(e),t.websocket.binaryType=\"arraybuffer\",t.websocket.on(\"listening\",(function(){t.socketStatus=wt,t.notify(\"open\")})),t.websocket.on(\"error\",(function(e){t.notify(\"error\",e)})),t.websocket.on(\"connection\",(function(e){e.on(\"message\",(function(e,n){t.send(e,{receiver:\"udp\"}),t.notify(new Uint8Array(e),n)}))}))}))}},{key:\"close\",value:function(){var t=this;this.socketStatus=yt,this.socket.close((function(){t.websocket.close((function(){t.socketStatus=gt,t.notify(\"close\")}))}))}},{key:\"send\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=bt(this.options,e),r=n.receiver;if(\"udp\"===r){var o=t instanceof Buffer?t:Buffer.from(t);this.socket.send(o,0,o.byteLength,n.udpClient.port,n.udpClient.host)}else{if(\"ws\"!==r)throw new Error(\"BridgePlugin can not send message to unknown receiver\");this.websocket.clients.forEach((function(e){e.send(t,{binary:!0})}))}}}])}(at),St=-1,Et=0,Ot=1,Ct=2,Pt=3,At={host:\"localhost\",port:8080,secure:!1,protocol:[]},It=function(e){function n(e){var o;if(i(this,n),o=t(this,n),!pt)throw new Error(\"WebsocketClientPlugin can't find a WebSocket class\");return o.options=r(r({},At),e),o.socket=null,o.socketStatus=St,o.notify=function(){},o}return c(n,e),a(n,[{key:\"registerNotify\",value:function(t){this.notify=t}},{key:\"status\",value:function(){return this.socketStatus}},{key:\"open\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=r(r({},this.options),e),o=n.port,i=n.host,s=n.secure,a=n.protocol;this.socket&&this.close();var u=s?\"wss\":\"ws\",c={address:i,family:u,port:o,size:0};this.socket=new pt(\"\".concat(u,\"://\").concat(i,\":\").concat(o),a),this.socket.binaryType=\"arraybuffer\",this.socketStatus=Et,this.socket.onopen=function(){t.socketStatus=Ot,t.notify(\"open\")},this.socket.onclose=function(){t.socketStatus=Pt,t.notify(\"close\")},this.socket.onerror=function(e){t.notify(\"error\",e)},this.socket.onmessage=function(e){t.notify(e.data,c)}}},{key:\"close\",value:function(){this.socketStatus=Ct,this.socket.close()}},{key:\"send\",value:function(t){this.socket.send(t)}}])}(at),jt=0,Dt=1,Bt=2,Mt=3,xt=function(e){function n(e){throw i(this,n),t(this,n),new Error(\"WebsocketServerPlugin can not be used in browser context\")}return c(n,e),a(n,[{key:\"registerNotify\",value:function(t){this.notify=t}},{key:\"status\",value:function(){return this.socketStatus}},{key:\"open\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=r(r({},this.options),e),o=n.port,i=n.host,s={address:i,family:\"wsserver\",port:o,size:0};this.socket&&this.close(),n.server?this.socket=new dt({server:n.server}):this.socket=new dt({host:i,port:o}),this.socket.binaryType=\"arraybuffer\",this.socketStatus=jt,this.socket.on(\"listening\",(function(){t.socketStatus=Dt,t.notify(\"open\")})),this.socket.on(\"error\",(function(e){t.notify(\"error\",e)})),this.socket.on(\"connection\",(function(e){e.on(\"message\",(function(e){t.notify(new Uint8Array(e),s)}))}))}},{key:\"close\",value:function(){var t=this;this.socketStatus=Bt,this.socket.close((function(){t.socketStatus=Mt,t.notify(\"close\")}))}},{key:\"send\",value:function(t){this.socket.clients.forEach((function(e){e.send(t,{binary:!0})}))}}])}(at),Tt={discardLateMessages:!1},Ht=a((function t(e){if(i(this,t),e&&!b(e))throw new Error(\"OSC options argument has to be an object.\");this.options=r(r({},Tt),e),this.options.plugin||(this.options.plugin=new It),this.eventHandler=new st({discardLateMessages:this.options.discardLateMessages});var n=this.eventHandler;this.options.plugin&&this.options.plugin.registerNotify&&this.options.plugin.registerNotify((function(){return n.notify.apply(n,arguments)}))}),[{key:\"on\",value:function(t,e){if(!w(t)||!m(e))throw new Error(\"OSC on() needs event- or address string and callback function\");return this.eventHandler.on(t,e)}},{key:\"off\",value:function(t,e){if(!w(t)||!d(e))throw new Error(\"OSC off() needs string and number (subscriptionId) to unsubscribe\");return this.eventHandler.off(t,e)}},{key:\"open\",value:function(t){if(t&&!b(t))throw new Error(\"OSC open() options argument needs to be an object\");if(!this.options.plugin||!m(this.options.plugin.open))throw new Error(\"OSC Plugin API #open is not implemented!\");return this.options.plugin.open(t)}},{key:\"status\",value:function(){if(!this.options.plugin||!m(this.options.plugin.status))throw new Error(\"OSC Plugin API #status is not implemented!\");return this.options.plugin.status()}},{key:\"close\",value:function(){if(!this.options.plugin||!m(this.options.plugin.close))throw new Error(\"OSC Plugin API #close is not implemented!\");return this.options.plugin.close()}},{key:\"send\",value:function(t,e){if(!this.options.plugin||!m(this.options.plugin.send))throw new Error(\"OSC Plugin API #send is not implemented!\");if(!(t instanceof tt||t instanceof et||t instanceof rt||t instanceof ot))throw new Error(\"OSC send() needs Messages, Bundles or Packets\");if(e&&!b(e))throw new Error(\"OSC send() options argument has to be an object\");return this.options.plugin.send(t.pack(),e)}}]);return Ht.STATUS={IS_NOT_INITIALIZED:-1,IS_CONNECTING:0,IS_OPEN:1,IS_CLOSING:2,IS_CLOSED:3},Ht.Packet=ot,Ht.Bundle=rt,Ht.Message=et,Ht.TypedMessage=tt,Ht.Plugin=at,Ht.DatagramPlugin=ht,Ht.WebsocketClientPlugin=It,Ht.WebsocketServerPlugin=xt,Ht.BridgePlugin=mt,Ht}));\n//# sourceMappingURL=osc.min.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/osc-js/lib/osc.min.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar _audioSystem = _interopRequireDefault(__webpack_require__(/*! ./audio/audio-system */ \"./src/audio/audio-system.js\"));\nvar _glottis = _interopRequireDefault(__webpack_require__(/*! ./audio/glottis */ \"./src/audio/glottis.js\"));\nvar _tract = _interopRequireDefault(__webpack_require__(/*! ./audio/tract */ \"./src/audio/tract.js\"));\nvar _ui = _interopRequireDefault(__webpack_require__(/*! ./ui/ui */ \"./src/ui/ui.js\"));\nvar _tractUi = _interopRequireDefault(__webpack_require__(/*! ./ui/tract-ui */ \"./src/ui/tract-ui.js\"));\nvar _api = _interopRequireDefault(__webpack_require__(/*! ./osc/api */ \"./src/osc/api.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n// globals\nwindow.time = 0;\nwindow.sampleRate = 441000;\nwindow.autoWobble = false;\nwindow.alwaysVoice = false;\nwindow.palePink = \"#FFEEF5\";\nMath.clamp = function (number, min, max) {\n  if (number < min) return min;else if (number > max) return max;else return number;\n};\nMath.moveTowards = function (current, target, amount) {\n  if (current < target) return Math.min(current + amount, target);else return Math.max(current - amount, target);\n};\nMath.moveTowards = function (current, target, amountUp, amountDown) {\n  if (current < target) return Math.min(current + amountUp, target);else return Math.max(current - amountDown, target);\n};\nMath.gaussian = function () {\n  var s = 0;\n  for (var c = 0; c < 16; c++) {\n    s += Math.random();\n  }\n  return (s - 8) / 4;\n};\nvar noiseFreq = 500;\nvar noiseQ = 0.7;\nvar isFirefox = false;\nvar browser = navigator.userAgent.toLowerCase();\nif (browser.indexOf('firefox') > -1) isFirefox = true;\ndocument.body.style.cursor = 'pointer';\n_audioSystem.default.init();\n_ui.default.init();\n_glottis.default.init();\n_tract.default.init();\n_tractUi.default.init();\n_api.default.init();\nrequestAnimationFrame(redraw);\nfunction redraw(highResTimestamp) {\n  _ui.default.shapeToFitScreen();\n  _tractUi.default.draw();\n  _ui.default.draw();\n  requestAnimationFrame(redraw);\n  time = Date.now() / 1000;\n  _ui.default.updateTouches();\n}\n\n/**********************************************************************************/\n/**********************************************************************************/\n\n/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\nvar _module = global.noise = {};\nfunction Grad(x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n}\nGrad.prototype.dot2 = function (x, y) {\n  return this.x * x + this.y * y;\n};\nGrad.prototype.dot3 = function (x, y, z) {\n  return this.x * x + this.y * y + this.z * z;\n};\nvar grad3 = [new Grad(1, 1, 0), new Grad(-1, 1, 0), new Grad(1, -1, 0), new Grad(-1, -1, 0), new Grad(1, 0, 1), new Grad(-1, 0, 1), new Grad(1, 0, -1), new Grad(-1, 0, -1), new Grad(0, 1, 1), new Grad(0, -1, 1), new Grad(0, 1, -1), new Grad(0, -1, -1)];\nvar p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\n// To remove the need for index wrapping, double the permutation table length\nvar perm = new Array(512);\nvar gradP = new Array(512);\n\n// This isn't a very good seeding function, but it works ok. It supports 2^16\n// different seed values. Write something better if you need more seeds.\n_module.seed = function (seed) {\n  if (seed > 0 && seed < 1) {\n    // Scale the seed out\n    seed *= 65536;\n  }\n  seed = Math.floor(seed);\n  if (seed < 256) {\n    seed |= seed << 8;\n  }\n  for (var i = 0; i < 256; i++) {\n    var v;\n    if (i & 1) {\n      v = p[i] ^ seed & 255;\n    } else {\n      v = p[i] ^ seed >> 8 & 255;\n    }\n    perm[i] = perm[i + 256] = v;\n    gradP[i] = gradP[i + 256] = grad3[v % 12];\n  }\n};\n_module.seed(Date.now());\n\n/*\nfor(var i=0; i<256; i++) {\n    perm[i] = perm[i + 256] = p[i];\n    gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n}*/\n\n// Skewing and unskewing factors for 2, 3, and 4 dimensions\nvar F2 = 0.5 * (Math.sqrt(3) - 1);\nvar G2 = (3 - Math.sqrt(3)) / 6;\nvar F3 = 1 / 3;\nvar G3 = 1 / 6;\n\n// 2D simplex noise\n_module.simplex2 = function (xin, yin) {\n  var n0, n1, n2; // Noise contributions from the three corners\n  // Skew the input space to determine which simplex cell we're in\n  var s = (xin + yin) * F2; // Hairy factor for 2D\n  var i = Math.floor(xin + s);\n  var j = Math.floor(yin + s);\n  var t = (i + j) * G2;\n  var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n  var y0 = yin - j + t;\n  // For the 2D case, the simplex shape is an equilateral triangle.\n  // Determine which simplex we are in.\n  var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n  if (x0 > y0) {\n    // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n    i1 = 1;\n    j1 = 0;\n  } else {\n    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n    i1 = 0;\n    j1 = 1;\n  }\n  // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n  // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n  // c = (3-sqrt(3))/6\n  var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n  var y1 = y0 - j1 + G2;\n  var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n  var y2 = y0 - 1 + 2 * G2;\n  // Work out the hashed gradient indices of the three simplex corners\n  i &= 255;\n  j &= 255;\n  var gi0 = gradP[i + perm[j]];\n  var gi1 = gradP[i + i1 + perm[j + j1]];\n  var gi2 = gradP[i + 1 + perm[j + 1]];\n  // Calculate the contribution from the three corners\n  var t0 = 0.5 - x0 * x0 - y0 * y0;\n  if (t0 < 0) {\n    n0 = 0;\n  } else {\n    t0 *= t0;\n    n0 = t0 * t0 * gi0.dot2(x0, y0); // (x,y) of grad3 used for 2D gradient\n  }\n  var t1 = 0.5 - x1 * x1 - y1 * y1;\n  if (t1 < 0) {\n    n1 = 0;\n  } else {\n    t1 *= t1;\n    n1 = t1 * t1 * gi1.dot2(x1, y1);\n  }\n  var t2 = 0.5 - x2 * x2 - y2 * y2;\n  if (t2 < 0) {\n    n2 = 0;\n  } else {\n    t2 *= t2;\n    n2 = t2 * t2 * gi2.dot2(x2, y2);\n  }\n  // Add contributions from each corner to get the final noise value.\n  // The result is scaled to return values in the interval [-1,1].\n  return 70 * (n0 + n1 + n2);\n};\n_module.simplex1 = function (x) {\n  return _module.simplex2(x * 1.2, -x * 0.7);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./src/app.js?");

/***/ }),

/***/ "./src/audio/audio-system.js":
/*!***********************************!*\
  !*** ./src/audio/audio-system.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _glottis = _interopRequireDefault(__webpack_require__(/*! ./glottis */ \"./src/audio/glottis.js\"));\nvar _tract = _interopRequireDefault(__webpack_require__(/*! ./tract */ \"./src/audio/tract.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n// TODO:\n// replace deprecated scriptProcessor with AudioWorklet\n// https://github.com/GoogleChromeLabs/web-audio-samples/blob/gh-pages/audio-worklet/basic/js/noise-generator.js\n\nvar AudioSystem = {\n  blockLength: 512,\n  blockTime: 1,\n  started: false,\n  soundOn: false,\n  init: function init() {\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    this.audioContext = new window.AudioContext();\n    sampleRate = this.audioContext.sampleRate;\n    this.blockTime = this.blockLength / sampleRate;\n  },\n  startSound: function startSound() {\n    //scriptProcessor may need a dummy input channel on iOS\n    this.scriptProcessor = this.audioContext.createScriptProcessor(this.blockLength, 2, 1);\n    this.scriptProcessor.connect(this.audioContext.destination);\n    this.scriptProcessor.onaudioprocess = AudioSystem.doScriptProcessor;\n    var whiteNoise = this.createWhiteNoiseNode(2 * sampleRate); // 2 seconds of noise\n\n    var aspirateFilter = this.audioContext.createBiquadFilter();\n    aspirateFilter.type = \"bandpass\";\n    aspirateFilter.frequency.value = 500;\n    aspirateFilter.Q.value = 0.5;\n    whiteNoise.connect(aspirateFilter);\n    aspirateFilter.connect(this.scriptProcessor);\n    var fricativeFilter = this.audioContext.createBiquadFilter();\n    fricativeFilter.type = \"bandpass\";\n    fricativeFilter.frequency.value = 1000;\n    fricativeFilter.Q.value = 0.5;\n    whiteNoise.connect(fricativeFilter);\n    fricativeFilter.connect(this.scriptProcessor);\n    whiteNoise.start(0);\n  },\n  createWhiteNoiseNode: function createWhiteNoiseNode(frameCount) {\n    var myArrayBuffer = this.audioContext.createBuffer(1, frameCount, sampleRate);\n    var nowBuffering = myArrayBuffer.getChannelData(0);\n    for (var i = 0; i < frameCount; i++) {\n      nowBuffering[i] = Math.random(); // gaussian();\n    }\n    var source = this.audioContext.createBufferSource();\n    source.buffer = myArrayBuffer;\n    source.loop = true;\n    return source;\n  },\n  doScriptProcessor: function doScriptProcessor(event) {\n    var inputArray1 = event.inputBuffer.getChannelData(0);\n    var inputArray2 = event.inputBuffer.getChannelData(1);\n    var outArray = event.outputBuffer.getChannelData(0);\n    for (var j = 0, N = outArray.length; j < N; j++) {\n      var lambda1 = j / N;\n      var lambda2 = (j + 0.5) / N;\n      var glottalOutput = _glottis.default.runStep(lambda1, inputArray1[j]);\n      var vocalOutput = 0;\n      //Tract runs at twice the sample rate\n      _tract.default.runStep(glottalOutput, inputArray2[j], lambda1);\n      vocalOutput += _tract.default.lipOutput + _tract.default.noseOutput;\n      _tract.default.runStep(glottalOutput, inputArray2[j], lambda2);\n      vocalOutput += _tract.default.lipOutput + _tract.default.noseOutput;\n      outArray[j] = vocalOutput * 0.125;\n    }\n    _glottis.default.finishBlock();\n    _tract.default.finishBlock();\n  },\n  mute: function mute() {\n    this.scriptProcessor.disconnect();\n  },\n  unmute: function unmute() {\n    this.scriptProcessor.connect(this.audioContext.destination);\n  }\n};\nvar _default = AudioSystem;\nexports.default = _default;\n\n//# sourceURL=webpack:///./src/audio/audio-system.js?");

/***/ }),

/***/ "./src/audio/glottis.js":
/*!******************************!*\
  !*** ./src/audio/glottis.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _ui = _interopRequireDefault(__webpack_require__(/*! ../ui/ui */ \"./src/ui/ui.js\"));\nvar _api = _interopRequireDefault(__webpack_require__(/*! ../osc/api */ \"./src/osc/api.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar backCanvas = document.getElementById(\"backCanvas\");\nvar backCtx = backCanvas.getContext(\"2d\");\nvar Glottis = {\n  timeInWaveform: 0,\n  oldFrequency: 140,\n  newFrequency: 140,\n  UIFrequency: 140,\n  smoothFrequency: 140,\n  oldTenseness: 0.6,\n  newTenseness: 0.6,\n  UITenseness: 0.6,\n  totalTime: 0,\n  vibratoAmount: 0.005,\n  vibratoFrequency: 6,\n  intensity: 0,\n  loudness: 1,\n  isTouched: false,\n  ctx: backCtx,\n  touch: 0,\n  x: 240,\n  y: 530,\n  keyboardTop: 500,\n  keyboardLeft: 0,\n  keyboardWidth: 600,\n  keyboardHeight: 100,\n  semitones: 20,\n  marks: [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0],\n  baseNote: 87.3071,\n  //F\n\n  init: function init() {\n    this.setupWaveform(0);\n    this.drawKeyboard();\n  },\n  drawKeyboard: function drawKeyboard() {\n    this.ctx.strokeStyle = palePink;\n    this.ctx.fillStyle = palePink;\n    backCtx.globalAlpha = 1.0;\n    backCtx.lineCap = 'round';\n    backCtx.lineJoin = 'round';\n    var radius = 2;\n    this.drawBar(0.0, 0.4, 8);\n    backCtx.globalAlpha = 0.7;\n    this.drawBar(0.52, 0.72, 8);\n    backCtx.strokeStyle = \"orchid\";\n    backCtx.fillStyle = \"orchid\";\n    for (var i = 0; i < this.semitones; i++) {\n      var keyWidth = this.keyboardWidth / this.semitones;\n      var x = this.keyboardLeft + (i + 1 / 2) * keyWidth;\n      var y = this.keyboardTop;\n      if (this.marks[(i + 3) % 12] == 1) {\n        backCtx.lineWidth = 4;\n        backCtx.globalAlpha = 0.4;\n      } else {\n        backCtx.lineWidth = 3;\n        backCtx.globalAlpha = 0.2;\n      }\n      backCtx.beginPath();\n      backCtx.moveTo(x, y + 9);\n      backCtx.lineTo(x, y + this.keyboardHeight * 0.4 - 9);\n      backCtx.stroke();\n      backCtx.lineWidth = 3;\n      backCtx.globalAlpha = 0.15;\n      backCtx.beginPath();\n      backCtx.moveTo(x, y + this.keyboardHeight * 0.52 + 6);\n      backCtx.lineTo(x, y + this.keyboardHeight * 0.72 - 6);\n      backCtx.stroke();\n    }\n    backCtx.fillStyle = \"orchid\";\n    backCtx.font = \"17px Arial\";\n    backCtx.textAlign = \"center\";\n    backCtx.globalAlpha = 0.7;\n    backCtx.fillText(\"voicebox control\", 300, 490);\n    backCtx.fillText(\"pitch\", 300, 592);\n    backCtx.globalAlpha = 0.3;\n    backCtx.strokeStyle = \"orchid\";\n    backCtx.fillStyle = \"orchid\";\n    backCtx.save();\n    backCtx.translate(410, 587);\n    this.drawArrow(80, 2, 10);\n    backCtx.translate(-220, 0);\n    backCtx.rotate(Math.PI);\n    this.drawArrow(80, 2, 10);\n    backCtx.restore();\n    backCtx.globalAlpha = 1.0;\n  },\n  drawBar: function drawBar(topFactor, bottomFactor, radius) {\n    backCtx.lineWidth = radius * 2;\n    backCtx.beginPath();\n    backCtx.moveTo(this.keyboardLeft + radius, this.keyboardTop + topFactor * this.keyboardHeight + radius);\n    backCtx.lineTo(this.keyboardLeft + this.keyboardWidth - radius, this.keyboardTop + topFactor * this.keyboardHeight + radius);\n    backCtx.lineTo(this.keyboardLeft + this.keyboardWidth - radius, this.keyboardTop + bottomFactor * this.keyboardHeight - radius);\n    backCtx.lineTo(this.keyboardLeft + radius, this.keyboardTop + bottomFactor * this.keyboardHeight - radius);\n    backCtx.closePath();\n    backCtx.stroke();\n    backCtx.fill();\n  },\n  drawArrow: function drawArrow(l, ahw, ahl) {\n    backCtx.lineWidth = 2;\n    backCtx.beginPath();\n    backCtx.moveTo(-l, 0);\n    backCtx.lineTo(0, 0);\n    backCtx.lineTo(0, -ahw);\n    backCtx.lineTo(ahl, 0);\n    backCtx.lineTo(0, ahw);\n    backCtx.lineTo(0, 0);\n    backCtx.closePath();\n    backCtx.stroke();\n    backCtx.fill();\n  },\n  handleTouches: function handleTouches() {\n    if (this.touch != 0 && !this.touch.alive) this.touch = 0;\n    if (this.touch == 0) {\n      for (var j = 0; j < _ui.default.touchesWithMouse.length; j++) {\n        var touch = _ui.default.touchesWithMouse[j];\n        if (!touch.alive) continue;\n        if (touch.y < this.keyboardTop) continue;\n        this.touch = touch;\n      }\n    }\n    if (this.touch != 0) {\n      var local_y = this.touch.y - this.keyboardTop - 10;\n      var local_x = this.touch.x - this.keyboardLeft;\n      local_y = Math.clamp(local_y, 0, this.keyboardHeight - 26);\n      var semitone = this.semitones * local_x / this.keyboardWidth + 0.5;\n      Glottis.UIFrequency = this.baseNote * Math.pow(2, semitone / 12);\n      if (Glottis.intensity == 0) Glottis.smoothFrequency = Glottis.UIFrequency;\n\n      //Glottis.UIRd = 3*local_y / (this.keyboardHeight-20);\n      var t = Math.clamp(1 - local_y / (this.keyboardHeight - 28), 0, 1);\n      Glottis.UITenseness = 1 - Math.cos(t * Math.PI * 0.5);\n      Glottis.loudness = Math.pow(Glottis.UITenseness, 0.25);\n      this.x = this.touch.x;\n      this.y = local_y + this.keyboardTop + 10;\n    }\n    Glottis.isTouched = this.touch != 0;\n  },\n  handleOSCParams: function handleOSCParams() {\n    var semitone = _api.default.glottis.semitone;\n    Glottis.UIFrequency = this.baseNote * Math.pow(2, semitone / 12);\n    Glottis.loudness = _api.default.glottis.loudness || Glottis.loudness;\n    Glottis.intensity = _api.default.glottis.intensity || Glottis.intensity;\n    Glottis.UITenseness = _api.default.glottis.UITenseness || Glottis.UITenseness;\n    Glottis.vibratoAmount = _api.default.glottis.vibratoAmount || Glottis.vibratoAmount;\n    Glottis.vibratoFrequency = _api.default.glottis.vibratoFrequency || Glottis.vibratoFrequency;\n  },\n  handleOSCTouches: function handleOSCTouches() {\n    if (this.touch != 0 && !this.touch.alive) this.touch = 0;\n    if (this.touch == 0) {\n      for (var j = 0; j < _ui.default.touchesWithMouse.length; j++) {\n        var touch = _ui.default.touchesWithMouse[j];\n        if (!touch.alive) continue;\n        if (touch.y < this.keyboardTop) continue;\n        this.touch = touch;\n      }\n    }\n    Glottis.isTouched = this.touch != 0;\n  },\n  runStep: function runStep(lambda, noiseSource) {\n    var timeStep = 1.0 / sampleRate;\n    this.timeInWaveform += timeStep;\n    this.totalTime += timeStep;\n    if (this.timeInWaveform > this.waveformLength) {\n      this.timeInWaveform -= this.waveformLength;\n      this.setupWaveform(lambda);\n    }\n    var out = this.normalizedLFWaveform(this.timeInWaveform / this.waveformLength);\n    var aspiration = this.intensity * (1 - Math.sqrt(this.UITenseness)) * this.getNoiseModulator() * noiseSource;\n    aspiration *= 0.2 + 0.02 * noise.simplex1(this.totalTime * 1.99);\n    out += aspiration;\n    return out;\n  },\n  getNoiseModulator: function getNoiseModulator() {\n    var voiced = 0.1 + 0.2 * Math.max(0, Math.sin(Math.PI * 2 * this.timeInWaveform / this.waveformLength));\n    //return 0.3;   \n    return this.UITenseness * this.intensity * voiced + (1 - this.UITenseness * this.intensity) * 0.3;\n  },\n  finishBlock: function finishBlock() {\n    var vibrato = 0;\n    vibrato += this.vibratoAmount * Math.sin(2 * Math.PI * this.totalTime * this.vibratoFrequency);\n    vibrato += 0.02 * noise.simplex1(this.totalTime * 4.07);\n    vibrato += 0.04 * noise.simplex1(this.totalTime * 2.15);\n    if (autoWobble) {\n      vibrato += 0.2 * noise.simplex1(this.totalTime * 0.98);\n      vibrato += 0.4 * noise.simplex1(this.totalTime * 0.5);\n    }\n    if (this.UIFrequency > this.smoothFrequency) this.smoothFrequency = Math.min(this.smoothFrequency * 1.1, this.UIFrequency);\n    if (this.UIFrequency < this.smoothFrequency) this.smoothFrequency = Math.max(this.smoothFrequency / 1.1, this.UIFrequency);\n    this.oldFrequency = this.newFrequency;\n    this.newFrequency = this.smoothFrequency * (1 + vibrato);\n    this.oldTenseness = this.newTenseness;\n    this.newTenseness = this.UITenseness + 0.1 * noise.simplex1(this.totalTime * 0.46) + 0.05 * noise.simplex1(this.totalTime * 0.36);\n    if (!this.isTouched && window.alwaysVoice) this.newTenseness += (3 - this.UITenseness) * (1 - this.intensity);\n    if (this.isTouched || window.alwaysVoice) this.intensity += 0.13;else this.intensity -= 0.05;\n    this.intensity = Math.clamp(this.intensity, 0, 1);\n  },\n  setupWaveform: function setupWaveform(lambda) {\n    this.frequency = this.oldFrequency * (1 - lambda) + this.newFrequency * lambda;\n    var tenseness = this.oldTenseness * (1 - lambda) + this.newTenseness * lambda;\n    this.Rd = 3 * (1 - tenseness);\n    this.waveformLength = 1.0 / this.frequency;\n    var Rd = this.Rd;\n    if (Rd < 0.5) Rd = 0.5;\n    if (Rd > 2.7) Rd = 2.7;\n    var output;\n    // normalized to time = 1, Ee = 1\n    var Ra = -0.01 + 0.048 * Rd;\n    var Rk = 0.224 + 0.118 * Rd;\n    var Rg = Rk / 4 * (0.5 + 1.2 * Rk) / (0.11 * Rd - Ra * (0.5 + 1.2 * Rk));\n    var Ta = Ra;\n    var Tp = 1 / (2 * Rg);\n    var Te = Tp + Tp * Rk; //\n\n    var epsilon = 1 / Ta;\n    var shift = Math.exp(-epsilon * (1 - Te));\n    var Delta = 1 - shift; //divide by this to scale RHS\n\n    var RHSIntegral = 1 / epsilon * (shift - 1) + (1 - Te) * shift;\n    RHSIntegral = RHSIntegral / Delta;\n    var totalLowerIntegral = -(Te - Tp) / 2 + RHSIntegral;\n    var totalUpperIntegral = -totalLowerIntegral;\n    var omega = Math.PI / Tp;\n    var s = Math.sin(omega * Te);\n    // need E0*e^(alpha*Te)*s = -1 (to meet the return at -1)\n    // and E0*e^(alpha*Tp/2) * Tp*2/pi = totalUpperIntegral \n    //             (our approximation of the integral up to Tp)\n    // writing x for e^alpha,\n    // have E0*x^Te*s = -1 and E0 * x^(Tp/2) * Tp*2/pi = totalUpperIntegral\n    // dividing the second by the first,\n    // letting y = x^(Tp/2 - Te),\n    // y * Tp*2 / (pi*s) = -totalUpperIntegral;\n    var y = -Math.PI * s * totalUpperIntegral / (Tp * 2);\n    var z = Math.log(y);\n    var alpha = z / (Tp / 2 - Te);\n    var E0 = -1 / (s * Math.exp(alpha * Te));\n    this.alpha = alpha;\n    this.E0 = E0;\n    this.epsilon = epsilon;\n    this.shift = shift;\n    this.Delta = Delta;\n    this.Te = Te;\n    this.omega = omega;\n  },\n  normalizedLFWaveform: function normalizedLFWaveform(t) {\n    var output;\n    if (t > this.Te) output = (-Math.exp(-this.epsilon * (t - this.Te)) + this.shift) / this.Delta;else output = this.E0 * Math.exp(this.alpha * t) * Math.sin(this.omega * t);\n    return output * this.intensity * this.loudness;\n  }\n};\nvar _default = Glottis;\nexports.default = _default;\n\n//# sourceURL=webpack:///./src/audio/glottis.js?");

/***/ }),

/***/ "./src/audio/tract.js":
/*!****************************!*\
  !*** ./src/audio/tract.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _audioSystem = _interopRequireDefault(__webpack_require__(/*! ./audio-system */ \"./src/audio/audio-system.js\"));\nvar _glottis = _interopRequireDefault(__webpack_require__(/*! ./glottis */ \"./src/audio/glottis.js\"));\nvar _ui = _interopRequireDefault(__webpack_require__(/*! ../ui/ui */ \"./src/ui/ui.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar Tract = {\n  n: 44,\n  bladeStart: 10,\n  tipStart: 32,\n  lipStart: 39,\n  R: [],\n  //component going right\n  L: [],\n  //component going left\n  reflection: [],\n  junctionOutputR: [],\n  junctionOutputL: [],\n  maxAmplitude: [],\n  diameter: [],\n  restDiameter: [],\n  targetDiameter: [],\n  newDiameter: [],\n  A: [],\n  glottalReflection: 0.75,\n  lipReflection: -0.85,\n  lastObstruction: -1,\n  fade: 1.0,\n  //0.9999,\n  movementSpeed: 15,\n  //cm per second\n  transients: [],\n  lipOutput: 0,\n  noseOutput: 0,\n  velumTarget: 0.01,\n  // in order for diameter to be set by OSC command\n  // prevent the tract from reshaping to default based on UI\n  reshapeByUI: true,\n  init: function init() {\n    this.bladeStart = Math.floor(this.bladeStart * this.n / 44);\n    this.tipStart = Math.floor(this.tipStart * this.n / 44);\n    this.lipStart = Math.floor(this.lipStart * this.n / 44);\n    this.diameter = new Float64Array(this.n);\n    this.restDiameter = new Float64Array(this.n);\n    this.targetDiameter = new Float64Array(this.n);\n    this.newDiameter = new Float64Array(this.n);\n    for (var i = 0; i < this.n; i++) {\n      var diameter = 0;\n      if (i < 7 * this.n / 44 - 0.5) diameter = 0.6;else if (i < 12 * this.n / 44) diameter = 1.1;else diameter = 1.5;\n      this.diameter[i] = this.restDiameter[i] = this.targetDiameter[i] = this.newDiameter[i] = diameter;\n    }\n    this.R = new Float64Array(this.n);\n    this.L = new Float64Array(this.n);\n    this.reflection = new Float64Array(this.n + 1);\n    this.newReflection = new Float64Array(this.n + 1);\n    this.junctionOutputR = new Float64Array(this.n + 1);\n    this.junctionOutputL = new Float64Array(this.n + 1);\n    this.A = new Float64Array(this.n);\n    this.maxAmplitude = new Float64Array(this.n);\n    this.noseLength = Math.floor(28 * this.n / 44);\n    this.noseStart = this.n - this.noseLength + 1;\n    this.noseR = new Float64Array(this.noseLength);\n    this.noseL = new Float64Array(this.noseLength);\n    this.noseJunctionOutputR = new Float64Array(this.noseLength + 1);\n    this.noseJunctionOutputL = new Float64Array(this.noseLength + 1);\n    this.noseReflection = new Float64Array(this.noseLength + 1);\n    this.noseDiameter = new Float64Array(this.noseLength);\n    this.noseA = new Float64Array(this.noseLength);\n    this.noseMaxAmplitude = new Float64Array(this.noseLength);\n    for (var i = 0; i < this.noseLength; i++) {\n      var diameter;\n      var d = 2 * (i / this.noseLength);\n      if (d < 1) diameter = 0.4 + 1.6 * d;else diameter = 0.5 + 1.5 * (2 - d);\n      diameter = Math.min(diameter, 1.9);\n      this.noseDiameter[i] = diameter;\n    }\n    this.newReflectionLeft = this.newReflectionRight = this.newReflectionNose = 0;\n    this.calculateReflections();\n    this.calculateNoseReflections();\n    this.noseDiameter[0] = this.velumTarget;\n  },\n  reshapeTract: function reshapeTract(deltaTime) {\n    var amount = deltaTime * this.movementSpeed;\n    ;\n    var newLastObstruction = -1;\n    for (var i = 0; i < this.n; i++) {\n      var diameter = this.diameter[i];\n      var targetDiameter = this.targetDiameter[i];\n      if (diameter <= 0) newLastObstruction = i;\n      var slowReturn;\n      if (i < this.noseStart) slowReturn = 0.6;else if (i >= this.tipStart) slowReturn = 1.0;else slowReturn = 0.6 + 0.4 * (i - this.noseStart) / (this.tipStart - this.noseStart);\n      this.diameter[i] = Math.moveTowards(diameter, targetDiameter, slowReturn * amount, 2 * amount);\n    }\n    if (this.lastObstruction > -1 && newLastObstruction == -1 && this.noseA[0] < 0.05) {\n      this.addTransient(this.lastObstruction);\n    }\n    this.lastObstruction = newLastObstruction;\n    amount = deltaTime * this.movementSpeed;\n    this.noseDiameter[0] = Math.moveTowards(this.noseDiameter[0], this.velumTarget, amount * 0.25, amount * 0.1);\n    this.noseA[0] = this.noseDiameter[0] * this.noseDiameter[0];\n  },\n  calculateReflections: function calculateReflections() {\n    for (var i = 0; i < this.n; i++) {\n      this.A[i] = this.diameter[i] * this.diameter[i]; //ignoring PI etc.\n    }\n    for (var i = 1; i < this.n; i++) {\n      this.reflection[i] = this.newReflection[i];\n      if (this.A[i] == 0) this.newReflection[i] = 0.999; //to prevent some bad behaviour if 0\n      else this.newReflection[i] = (this.A[i - 1] - this.A[i]) / (this.A[i - 1] + this.A[i]);\n    }\n\n    //now at junction with nose\n\n    this.reflectionLeft = this.newReflectionLeft;\n    this.reflectionRight = this.newReflectionRight;\n    this.reflectionNose = this.newReflectionNose;\n    var sum = this.A[this.noseStart] + this.A[this.noseStart + 1] + this.noseA[0];\n    this.newReflectionLeft = (2 * this.A[this.noseStart] - sum) / sum;\n    this.newReflectionRight = (2 * this.A[this.noseStart + 1] - sum) / sum;\n    this.newReflectionNose = (2 * this.noseA[0] - sum) / sum;\n  },\n  calculateNoseReflections: function calculateNoseReflections() {\n    for (var i = 0; i < this.noseLength; i++) {\n      this.noseA[i] = this.noseDiameter[i] * this.noseDiameter[i];\n    }\n    for (var i = 1; i < this.noseLength; i++) {\n      this.noseReflection[i] = (this.noseA[i - 1] - this.noseA[i]) / (this.noseA[i - 1] + this.noseA[i]);\n    }\n  },\n  runStep: function runStep(glottalOutput, turbulenceNoise, lambda) {\n    var updateAmplitudes = Math.random() < 0.1;\n\n    //mouth\n    this.processTransients();\n    this.addTurbulenceNoise(turbulenceNoise);\n\n    //this.glottalReflection = -0.8 + 1.6 * Glottis.newTenseness;\n    this.junctionOutputR[0] = this.L[0] * this.glottalReflection + glottalOutput;\n    this.junctionOutputL[this.n] = this.R[this.n - 1] * this.lipReflection;\n    for (var i = 1; i < this.n; i++) {\n      var r = this.reflection[i] * (1 - lambda) + this.newReflection[i] * lambda;\n      var w = r * (this.R[i - 1] + this.L[i]);\n      this.junctionOutputR[i] = this.R[i - 1] - w;\n      this.junctionOutputL[i] = this.L[i] + w;\n    }\n\n    //now at junction with nose\n    var i = this.noseStart;\n    var r = this.newReflectionLeft * (1 - lambda) + this.reflectionLeft * lambda;\n    this.junctionOutputL[i] = r * this.R[i - 1] + (1 + r) * (this.noseL[0] + this.L[i]);\n    r = this.newReflectionRight * (1 - lambda) + this.reflectionRight * lambda;\n    this.junctionOutputR[i] = r * this.L[i] + (1 + r) * (this.R[i - 1] + this.noseL[0]);\n    r = this.newReflectionNose * (1 - lambda) + this.reflectionNose * lambda;\n    this.noseJunctionOutputR[0] = r * this.noseL[0] + (1 + r) * (this.L[i] + this.R[i - 1]);\n    for (var i = 0; i < this.n; i++) {\n      this.R[i] = this.junctionOutputR[i] * 0.999;\n      this.L[i] = this.junctionOutputL[i + 1] * 0.999;\n\n      //this.R[i] = Math.clamp(this.junctionOutputR[i] * this.fade, -1, 1);\n      //this.L[i] = Math.clamp(this.junctionOutputL[i+1] * this.fade, -1, 1);    \n\n      if (updateAmplitudes) {\n        var amplitude = Math.abs(this.R[i] + this.L[i]);\n        if (amplitude > this.maxAmplitude[i]) this.maxAmplitude[i] = amplitude;else this.maxAmplitude[i] *= 0.999;\n      }\n    }\n    this.lipOutput = this.R[this.n - 1];\n\n    //nose     \n    this.noseJunctionOutputL[this.noseLength] = this.noseR[this.noseLength - 1] * this.lipReflection;\n    for (var i = 1; i < this.noseLength; i++) {\n      var w = this.noseReflection[i] * (this.noseR[i - 1] + this.noseL[i]);\n      this.noseJunctionOutputR[i] = this.noseR[i - 1] - w;\n      this.noseJunctionOutputL[i] = this.noseL[i] + w;\n    }\n    for (var i = 0; i < this.noseLength; i++) {\n      this.noseR[i] = this.noseJunctionOutputR[i] * this.fade;\n      this.noseL[i] = this.noseJunctionOutputL[i + 1] * this.fade;\n\n      //this.noseR[i] = Math.clamp(this.noseJunctionOutputR[i] * this.fade, -1, 1);\n      //this.noseL[i] = Math.clamp(this.noseJunctionOutputL[i+1] * this.fade, -1, 1);    \n\n      if (updateAmplitudes) {\n        var amplitude = Math.abs(this.noseR[i] + this.noseL[i]);\n        if (amplitude > this.noseMaxAmplitude[i]) this.noseMaxAmplitude[i] = amplitude;else this.noseMaxAmplitude[i] *= 0.999;\n      }\n    }\n    this.noseOutput = this.noseR[this.noseLength - 1];\n  },\n  finishBlock: function finishBlock() {\n    // in order for diameter to be set by OSC command\n    // prevent the tract from reshaping to default based on UI\n    if (this.reshapeByUI) {\n      this.reshapeTract(_audioSystem.default.blockTime);\n    }\n    this.calculateReflections();\n  },\n  addTransient: function addTransient(position) {\n    var trans = {};\n    trans.position = position;\n    trans.timeAlive = 0;\n    trans.lifeTime = 0.2;\n    trans.strength = 0.3;\n    trans.exponent = 200;\n    this.transients.push(trans);\n  },\n  processTransients: function processTransients() {\n    for (var i = 0; i < this.transients.length; i++) {\n      var trans = this.transients[i];\n      var amplitude = trans.strength * Math.pow(2, -trans.exponent * trans.timeAlive);\n      this.R[trans.position] += amplitude / 2;\n      this.L[trans.position] += amplitude / 2;\n      trans.timeAlive += 1.0 / (sampleRate * 2);\n    }\n    for (var i = this.transients.length - 1; i >= 0; i--) {\n      var trans = this.transients[i];\n      if (trans.timeAlive > trans.lifeTime) {\n        this.transients.splice(i, 1);\n      }\n    }\n  },\n  addTurbulenceNoise: function addTurbulenceNoise(turbulenceNoise) {\n    for (var j = 0; j < _ui.default.touchesWithMouse.length; j++) {\n      var touch = _ui.default.touchesWithMouse[j];\n      if (touch.index < 2 || touch.index > Tract.n) continue;\n      if (touch.diameter <= 0) continue;\n      var intensity = touch.fricative_intensity;\n      if (intensity == 0) continue;\n      this.addTurbulenceNoiseAtIndex(0.66 * turbulenceNoise * intensity, touch.index, touch.diameter);\n    }\n  },\n  addTurbulenceNoiseAtIndex: function addTurbulenceNoiseAtIndex(turbulenceNoise, index, diameter) {\n    var i = Math.floor(index);\n    var delta = index - i;\n    turbulenceNoise *= _glottis.default.getNoiseModulator();\n    var thinness0 = Math.clamp(8 * (0.7 - diameter), 0, 1);\n    var openness = Math.clamp(30 * (diameter - 0.3), 0, 1);\n    var noise0 = turbulenceNoise * (1 - delta) * thinness0 * openness;\n    var noise1 = turbulenceNoise * delta * thinness0 * openness;\n    this.R[i + 1] += noise0 / 2;\n    this.L[i + 1] += noise0 / 2;\n    this.R[i + 2] += noise1 / 2;\n    this.L[i + 2] += noise1 / 2;\n  }\n};\nvar _default = Tract;\nexports.default = _default;\n\n//# sourceURL=webpack:///./src/audio/tract.js?");

/***/ }),

/***/ "./src/osc/api.js":
/*!************************!*\
  !*** ./src/osc/api.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _glottis = _interopRequireDefault(__webpack_require__(/*! ../audio/glottis */ \"./src/audio/glottis.js\"));\nvar _tractUi = _interopRequireDefault(__webpack_require__(/*! ../ui/tract-ui */ \"./src/ui/tract-ui.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar OSC = __webpack_require__(/*! osc-js */ \"./node_modules/osc-js/lib/osc.min.js\");\nvar OSCAPI = {\n  osc: new OSC(),\n  _prevNoteState: false,\n  init: function init() {\n    var _this = this;\n    this.osc.open({\n      port: 9999\n    });\n    this.bindTouch();\n    this.bindGlottis();\n    this.bindTract();\n    window.onunload = function () {\n      _this.osc.close({\n        port: 9999\n      });\n      return true;\n    };\n  },\n  bindTouch: function bindTouch() {\n    var _this2 = this;\n    this.osc.on('/touch', function (message) {\n      var key = message.args[0];\n      var val = message.args[1];\n      _this2.touch[key] = val;\n      _this2.handleTouches();\n    });\n  },\n  bindGlottis: function bindGlottis() {\n    var _this3 = this;\n    this.osc.on('/glottis', function (message) {\n      var key = message.args[0];\n      var val = message.args[1];\n      _this3.glottis[key] = val;\n    });\n  },\n  bindTract: function bindTract() {\n    var _this4 = this;\n    this.osc.on('/tract', function (message) {\n      var key = message.args[0];\n      if (key === 'diameter') {\n        var diameter = message.args.splice(1);\n        _this4.tract[key] = diameter;\n      }\n    });\n  },\n  handleTouches: function handleTouches() {\n    _glottis.default.touch = this.touch;\n    _glottis.default.handleOSCParams();\n    _glottis.default.handleOSCTouches();\n    _tractUi.default.handleOSCParams();\n  },\n  touch: {\n    alive: false,\n    diameter: 2,\n    // 0 - 4\n    // endTime: 1534610410.126,\n    fricative_intensity: 0,\n    // id: \"mouse0.2884742858736995\",\n    // index: -25.89487282088425,\n    // startTime: 1534610410.06,\n    x: 0,\n    y: 0\n  },\n  glottis: {},\n  tract: {}\n};\nvar _default = OSCAPI;\nexports.default = _default;\n\n//# sourceURL=webpack:///./src/osc/api.js?");

/***/ }),

/***/ "./src/ui/tract-ui.js":
/*!****************************!*\
  !*** ./src/ui/tract-ui.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _tract = _interopRequireDefault(__webpack_require__(/*! ../audio/tract */ \"./src/audio/tract.js\"));\nvar _glottis = _interopRequireDefault(__webpack_require__(/*! ../audio/glottis */ \"./src/audio/glottis.js\"));\nvar _ui = _interopRequireDefault(__webpack_require__(/*! ./ui */ \"./src/ui/ui.js\"));\nvar _api = _interopRequireDefault(__webpack_require__(/*! ../osc/api */ \"./src/osc/api.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar tractCanvas = document.getElementById(\"tractCanvas\");\nvar tractCtx = tractCanvas.getContext(\"2d\");\nvar backCanvas = document.getElementById(\"backCanvas\");\nvar backCtx = backCanvas.getContext(\"2d\");\nvar temp = {\n  a: 0,\n  b: 0\n};\nvar TractUI = {\n  originX: 340,\n  originY: 449,\n  radius: 298,\n  scale: 60,\n  tongueIndex: 12.9,\n  tongueDiameter: 2.43,\n  innerTongueControlRadius: 2.05,\n  outerTongueControlRadius: 3.5,\n  tongueTouch: 0,\n  angleScale: 0.64,\n  angleOffset: -0.24,\n  noseOffset: 0.8,\n  gridOffset: 1.7,\n  fillColour: 'pink',\n  lineColour: '#C070C6',\n  init: function init() {\n    this.ctx = tractCtx;\n    this.setRestDiameter();\n    for (var i = 0; i < _tract.default.n; i++) {\n      _tract.default.diameter[i] = _tract.default.targetDiameter[i] = _tract.default.restDiameter[i];\n    }\n    this.drawBackground();\n    this.tongueLowerIndexBound = _tract.default.bladeStart + 2;\n    this.tongueUpperIndexBound = _tract.default.tipStart - 3;\n    this.tongueIndexCentre = 0.5 * (this.tongueLowerIndexBound + this.tongueUpperIndexBound);\n  },\n  moveTo: function moveTo(i, d) {\n    var angle = this.angleOffset + i * this.angleScale * Math.PI / (_tract.default.lipStart - 1);\n    var wobble = _tract.default.maxAmplitude[_tract.default.n - 1] + _tract.default.noseMaxAmplitude[_tract.default.noseLength - 1];\n    wobble *= 0.03 * Math.sin(2 * i - 50 * time) * i / _tract.default.n;\n    angle += wobble;\n    var r = this.radius - this.scale * d + 100 * wobble;\n    this.ctx.moveTo(this.originX - r * Math.cos(angle), this.originY - r * Math.sin(angle));\n  },\n  lineTo: function lineTo(i, d) {\n    var angle = this.angleOffset + i * this.angleScale * Math.PI / (_tract.default.lipStart - 1);\n    var wobble = _tract.default.maxAmplitude[_tract.default.n - 1] + _tract.default.noseMaxAmplitude[_tract.default.noseLength - 1];\n    wobble *= 0.03 * Math.sin(2 * i - 50 * time) * i / _tract.default.n;\n    angle += wobble;\n    var r = this.radius - this.scale * d + 100 * wobble;\n    this.ctx.lineTo(this.originX - r * Math.cos(angle), this.originY - r * Math.sin(angle));\n  },\n  drawText: function drawText(i, d, text) {\n    var angle = this.angleOffset + i * this.angleScale * Math.PI / (_tract.default.lipStart - 1);\n    var r = this.radius - this.scale * d;\n    this.ctx.save();\n    this.ctx.translate(this.originX - r * Math.cos(angle), this.originY - r * Math.sin(angle) + 2); //+8);\n    this.ctx.rotate(angle - Math.PI / 2);\n    this.ctx.fillText(text, 0, 0);\n    this.ctx.restore();\n  },\n  drawTextStraight: function drawTextStraight(i, d, text) {\n    var angle = this.angleOffset + i * this.angleScale * Math.PI / (_tract.default.lipStart - 1);\n    var r = this.radius - this.scale * d;\n    this.ctx.save();\n    this.ctx.translate(this.originX - r * Math.cos(angle), this.originY - r * Math.sin(angle) + 2); //+8);\n    //this.ctx.rotate(angle-Math.PI/2);\n    this.ctx.fillText(text, 0, 0);\n    this.ctx.restore();\n  },\n  drawCircle: function drawCircle(i, d, radius) {\n    var angle = this.angleOffset + i * this.angleScale * Math.PI / (_tract.default.lipStart - 1);\n    var r = this.radius - this.scale * d;\n    this.ctx.beginPath();\n    this.ctx.arc(this.originX - r * Math.cos(angle), this.originY - r * Math.sin(angle), radius, 0, 2 * Math.PI);\n    this.ctx.fill();\n  },\n  getIndex: function getIndex(x, y) {\n    var xx = x - this.originX;\n    var yy = y - this.originY;\n    var angle = Math.atan2(yy, xx);\n    while (angle > 0) {\n      angle -= 2 * Math.PI;\n    }\n    return (Math.PI + angle - this.angleOffset) * (_tract.default.lipStart - 1) / (this.angleScale * Math.PI);\n  },\n  getDiameter: function getDiameter(x, y) {\n    var xx = x - this.originX;\n    var yy = y - this.originY;\n    return (this.radius - Math.sqrt(xx * xx + yy * yy)) / this.scale;\n  },\n  draw: function draw() {\n    this.ctx.clearRect(0, 0, tractCanvas.width, tractCanvas.height);\n    this.ctx.lineCap = 'round';\n    this.ctx.lineJoin = 'round';\n    this.drawTongueControl();\n    this.drawPitchControl();\n    var velum = _tract.default.noseDiameter[0];\n    var velumAngle = velum * 4;\n\n    //first draw fill\n    this.ctx.beginPath();\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeStyle = this.fillColour;\n    this.ctx.fillStyle = this.fillColour;\n    this.moveTo(1, 0);\n    for (var i = 1; i < _tract.default.n; i++) {\n      this.lineTo(i, _tract.default.diameter[i]);\n    }\n    for (var i = _tract.default.n - 1; i >= 2; i--) {\n      this.lineTo(i, 0);\n    }\n    this.ctx.closePath();\n    this.ctx.stroke();\n    this.ctx.fill();\n\n    //for nose\n    this.ctx.beginPath();\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeStyle = this.fillColour;\n    this.ctx.fillStyle = this.fillColour;\n    this.moveTo(_tract.default.noseStart, -this.noseOffset);\n    for (var i = 1; i < _tract.default.noseLength; i++) {\n      this.lineTo(i + _tract.default.noseStart, -this.noseOffset - _tract.default.noseDiameter[i] * 0.9);\n    }\n    for (var i = _tract.default.noseLength - 1; i >= 1; i--) {\n      this.lineTo(i + _tract.default.noseStart, -this.noseOffset);\n    }\n    this.ctx.closePath();\n    //this.ctx.stroke();\n    this.ctx.fill();\n\n    //velum\n    this.ctx.beginPath();\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeStyle = this.fillColour;\n    this.ctx.fillStyle = this.fillColour;\n    this.moveTo(_tract.default.noseStart - 2, 0);\n    this.lineTo(_tract.default.noseStart, -this.noseOffset);\n    this.lineTo(_tract.default.noseStart + velumAngle, -this.noseOffset);\n    this.lineTo(_tract.default.noseStart + velumAngle - 2, 0);\n    this.ctx.closePath();\n    this.ctx.stroke();\n    this.ctx.fill();\n\n    //white text\n    this.ctx.fillStyle = \"white\";\n    this.ctx.font = \"20px Arial\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.globalAlpha = 1.0;\n    this.drawText(_tract.default.n * 0.10, 0.425, \"throat\");\n    this.drawText(_tract.default.n * 0.71, -1.8, \"nasal\");\n    this.drawText(_tract.default.n * 0.71, -1.3, \"cavity\");\n    this.ctx.font = \"22px Arial\";\n    this.drawText(_tract.default.n * 0.6, 0.9, \"oral\");\n    this.drawText(_tract.default.n * 0.7, 0.9, \"cavity\");\n    this.drawAmplitudes();\n\n    //then draw lines\n    this.ctx.beginPath();\n    this.ctx.lineWidth = 5;\n    this.ctx.strokeStyle = this.lineColour;\n    this.ctx.lineJoin = 'round';\n    this.ctx.lineCap = 'round';\n    this.moveTo(1, _tract.default.diameter[0]);\n    for (var i = 2; i < _tract.default.n; i++) {\n      this.lineTo(i, _tract.default.diameter[i]);\n    }\n    this.moveTo(1, 0);\n    for (var i = 2; i <= _tract.default.noseStart - 2; i++) {\n      this.lineTo(i, 0);\n    }\n    this.moveTo(_tract.default.noseStart + velumAngle - 2, 0);\n    for (var i = _tract.default.noseStart + Math.ceil(velumAngle) - 2; i < _tract.default.n; i++) {\n      this.lineTo(i, 0);\n    }\n    this.ctx.stroke();\n\n    //for nose\n    this.ctx.beginPath();\n    this.ctx.lineWidth = 5;\n    this.ctx.strokeStyle = this.lineColour;\n    this.ctx.lineJoin = 'round';\n    this.moveTo(_tract.default.noseStart, -this.noseOffset);\n    for (var i = 1; i < _tract.default.noseLength; i++) {\n      this.lineTo(i + _tract.default.noseStart, -this.noseOffset - _tract.default.noseDiameter[i] * 0.9);\n    }\n    this.moveTo(_tract.default.noseStart + velumAngle, -this.noseOffset);\n    for (var i = Math.ceil(velumAngle); i < _tract.default.noseLength; i++) {\n      this.lineTo(i + _tract.default.noseStart, -this.noseOffset);\n    }\n    this.ctx.stroke();\n\n    //velum\n    this.ctx.globalAlpha = velum * 5;\n    this.ctx.beginPath();\n    this.moveTo(_tract.default.noseStart - 2, 0);\n    this.lineTo(_tract.default.noseStart, -this.noseOffset);\n    this.moveTo(_tract.default.noseStart + velumAngle - 2, 0);\n    this.lineTo(_tract.default.noseStart + velumAngle, -this.noseOffset);\n    this.ctx.stroke();\n    this.ctx.fillStyle = \"orchid\";\n    this.ctx.font = \"20px Arial\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.globalAlpha = 0.7;\n    this.drawText(_tract.default.n * 0.95, 0.8 + 0.8 * _tract.default.diameter[_tract.default.n - 1], \" lip\");\n    this.ctx.globalAlpha = 1.0;\n    this.ctx.fillStyle = \"black\";\n    this.ctx.textAlign = \"left\";\n    this.ctx.fillText(_ui.default.debugText, 20, 20);\n    //this.drawPositions();\n  },\n  drawBackground: function drawBackground() {\n    this.ctx = backCtx;\n\n    //text\n    this.ctx.fillStyle = \"orchid\";\n    this.ctx.font = \"20px Arial\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.globalAlpha = 0.7;\n    this.drawText(_tract.default.n * 0.44, -0.28, \"soft\");\n    this.drawText(_tract.default.n * 0.51, -0.28, \"palate\");\n    this.drawText(_tract.default.n * 0.77, -0.28, \"hard\");\n    this.drawText(_tract.default.n * 0.84, -0.28, \"palate\");\n    this.drawText(_tract.default.n * 0.95, -0.28, \" lip\");\n    this.ctx.font = \"17px Arial\";\n    this.drawTextStraight(_tract.default.n * 0.18, 3, \"  tongue control\");\n    this.ctx.textAlign = \"left\";\n    this.drawText(_tract.default.n * 1.03, -1.07, \"nasals\");\n    this.drawText(_tract.default.n * 1.03, -0.28, \"stops\");\n    this.drawText(_tract.default.n * 1.03, 0.51, \"fricatives\");\n    //this.drawTextStraight(1.5, +0.8, \"glottis\")\n    this.ctx.strokeStyle = \"orchid\";\n    this.ctx.lineWidth = 2;\n    this.ctx.beginPath();\n    this.moveTo(_tract.default.n * 1.03, 0);\n    this.lineTo(_tract.default.n * 1.07, 0);\n    this.moveTo(_tract.default.n * 1.03, -this.noseOffset);\n    this.lineTo(_tract.default.n * 1.07, -this.noseOffset);\n    this.ctx.stroke();\n    this.ctx.globalAlpha = 0.9;\n    this.ctx.globalAlpha = 1.0;\n    this.ctx = tractCtx;\n  },\n  drawPositions: function drawPositions() {\n    this.ctx.fillStyle = \"orchid\";\n    this.ctx.font = \"24px Arial\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.globalAlpha = 0.6;\n    var a = 2;\n    var b = 1.5;\n    this.drawText(15, a + b * 0.60, 'æ'); //pat\n    this.drawText(13, a + b * 0.27, 'ɑ'); //part\n    this.drawText(12, a + b * 0.00, 'ɒ'); //pot\n    this.drawText(17.7, a + b * 0.05, '(ɔ)'); //port (rounded)\n    this.drawText(27, a + b * 0.65, 'ɪ'); //pit\n    this.drawText(27.4, a + b * 0.21, 'i'); //peat\n    this.drawText(20, a + b * 1.00, 'e'); //pet\n    this.drawText(18.1, a + b * 0.37, 'ʌ'); //putt   \n    //put ʊ\n    this.drawText(23, a + b * 0.1, '(u)'); //poot (rounded)   \n    this.drawText(21, a + b * 0.6, 'ə'); //pert [should be ɜ]\n\n    var nasals = -1.1;\n    var stops = -0.4;\n    var fricatives = 0.3;\n    var approximants = 1.1;\n    this.ctx.globalAlpha = 0.8;\n\n    //approximants\n    this.drawText(38, approximants, 'l');\n    this.drawText(41, approximants, 'w');\n\n    //?\n    this.drawText(4.5, 0.37, 'h');\n    if (_glottis.default.isTouched || window.alwaysVoice) {\n      //voiced consonants\n      this.drawText(31.5, fricatives, 'ʒ');\n      this.drawText(36, fricatives, 'z');\n      this.drawText(41, fricatives, 'v');\n      this.drawText(22, stops, 'g');\n      this.drawText(36, stops, 'd');\n      this.drawText(41, stops, 'b');\n      this.drawText(22, nasals, 'ŋ');\n      this.drawText(36, nasals, 'n');\n      this.drawText(41, nasals, 'm');\n    } else {\n      //unvoiced consonants\n      this.drawText(31.5, fricatives, 'ʃ');\n      this.drawText(36, fricatives, 's');\n      this.drawText(41, fricatives, 'f');\n      this.drawText(22, stops, 'k');\n      this.drawText(36, stops, 't');\n      this.drawText(41, stops, 'p');\n      this.drawText(22, nasals, 'ŋ');\n      this.drawText(36, nasals, 'n');\n      this.drawText(41, nasals, 'm');\n    }\n  },\n  drawAmplitudes: function drawAmplitudes() {\n    this.ctx.strokeStyle = \"orchid\";\n    this.ctx.lineCap = \"butt\";\n    this.ctx.globalAlpha = 0.3;\n    for (var i = 2; i < _tract.default.n - 1; i++) {\n      this.ctx.beginPath();\n      this.ctx.lineWidth = Math.sqrt(_tract.default.maxAmplitude[i]) * 3;\n      this.moveTo(i, 0);\n      this.lineTo(i, _tract.default.diameter[i]);\n      this.ctx.stroke();\n    }\n    for (var i = 1; i < _tract.default.noseLength - 1; i++) {\n      this.ctx.beginPath();\n      this.ctx.lineWidth = Math.sqrt(_tract.default.noseMaxAmplitude[i]) * 3;\n      this.moveTo(i + _tract.default.noseStart, -this.noseOffset);\n      this.lineTo(i + _tract.default.noseStart, -this.noseOffset - _tract.default.noseDiameter[i] * 0.9);\n      this.ctx.stroke();\n    }\n    this.ctx.globalAlpha = 1;\n  },\n  drawTongueControl: function drawTongueControl() {\n    this.ctx.lineCap = \"round\";\n    this.ctx.lineJoin = \"round\";\n    this.ctx.strokeStyle = palePink;\n    this.ctx.fillStyle = palePink;\n    this.ctx.globalAlpha = 1.0;\n    this.ctx.beginPath();\n    this.ctx.lineWidth = 45;\n\n    //outline\n    this.moveTo(this.tongueLowerIndexBound, this.innerTongueControlRadius);\n    for (var i = this.tongueLowerIndexBound + 1; i <= this.tongueUpperIndexBound; i++) {\n      this.lineTo(i, this.innerTongueControlRadius);\n    }\n    this.lineTo(this.tongueIndexCentre, this.outerTongueControlRadius);\n    this.ctx.closePath();\n    this.ctx.stroke();\n    this.ctx.fill();\n    var a = this.innerTongueControlRadius;\n    var c = this.outerTongueControlRadius;\n    var b = 0.5 * (a + c);\n    var r = 3;\n    this.ctx.fillStyle = \"orchid\";\n    this.ctx.globalAlpha = 0.3;\n    this.drawCircle(this.tongueIndexCentre, a, r);\n    this.drawCircle(this.tongueIndexCentre - 4.25, a, r);\n    this.drawCircle(this.tongueIndexCentre - 8.5, a, r);\n    this.drawCircle(this.tongueIndexCentre + 4.25, a, r);\n    this.drawCircle(this.tongueIndexCentre + 8.5, a, r);\n    this.drawCircle(this.tongueIndexCentre - 6.1, b, r);\n    this.drawCircle(this.tongueIndexCentre + 6.1, b, r);\n    this.drawCircle(this.tongueIndexCentre, b, r);\n    this.drawCircle(this.tongueIndexCentre, c, r);\n    this.ctx.globalAlpha = 1.0;\n\n    //circle for tongue position\n    var angle = this.angleOffset + this.tongueIndex * this.angleScale * Math.PI / (_tract.default.lipStart - 1);\n    var r = this.radius - this.scale * this.tongueDiameter;\n    var x = this.originX - r * Math.cos(angle);\n    var y = this.originY - r * Math.sin(angle);\n    this.ctx.lineWidth = 4;\n    this.ctx.strokeStyle = \"orchid\";\n    this.ctx.globalAlpha = 0.7;\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, 18, 0, 2 * Math.PI);\n    this.ctx.stroke();\n    this.ctx.globalAlpha = 0.15;\n    this.ctx.fill();\n    this.ctx.globalAlpha = 1.0;\n    this.ctx.fillStyle = \"orchid\";\n  },\n  drawPitchControl: function drawPitchControl() {\n    var w = 9;\n    var h = 15;\n    if (_glottis.default.x) {\n      this.ctx.lineWidth = 4;\n      this.ctx.strokeStyle = \"orchid\";\n      this.ctx.globalAlpha = 0.7;\n      this.ctx.beginPath();\n      this.ctx.moveTo(_glottis.default.x - w, _glottis.default.y - h);\n      this.ctx.lineTo(_glottis.default.x + w, _glottis.default.y - h);\n      this.ctx.lineTo(_glottis.default.x + w, _glottis.default.y + h);\n      this.ctx.lineTo(_glottis.default.x - w, _glottis.default.y + h);\n      this.ctx.closePath();\n      this.ctx.stroke();\n      this.ctx.globalAlpha = 0.15;\n      this.ctx.fill();\n      this.ctx.globalAlpha = 1.0;\n    }\n  },\n  setRestDiameter: function setRestDiameter() {\n    for (var i = _tract.default.bladeStart; i < _tract.default.lipStart; i++) {\n      var t = 1.1 * Math.PI * (this.tongueIndex - i) / (_tract.default.tipStart - _tract.default.bladeStart);\n      var fixedTongueDiameter = 2 + (this.tongueDiameter - 2) / 1.5;\n      var curve = (1.5 - fixedTongueDiameter + this.gridOffset) * Math.cos(t);\n      if (i == _tract.default.bladeStart - 2 || i == _tract.default.lipStart - 1) curve *= 0.8;\n      if (i == _tract.default.bladeStart || i == _tract.default.lipStart - 2) curve *= 0.94;\n      _tract.default.restDiameter[i] = 1.5 - curve;\n    }\n  },\n  handleTouches: function handleTouches() {\n    _tract.default.reshapeByUI = true;\n    if (this.tongueTouch != 0 && !this.tongueTouch.alive) this.tongueTouch = 0;\n    if (this.tongueTouch == 0) {\n      for (var j = 0; j < _ui.default.touchesWithMouse.length; j++) {\n        var touch = _ui.default.touchesWithMouse[j];\n        if (!touch.alive) continue;\n        if (touch.fricative_intensity == 1) continue; //only new touches will pass this\n        var x = touch.x;\n        var y = touch.y;\n        var index = TractUI.getIndex(x, y);\n        var diameter = TractUI.getDiameter(x, y);\n        if (index >= this.tongueLowerIndexBound - 4 && index <= this.tongueUpperIndexBound + 4 && diameter >= this.innerTongueControlRadius - 0.5 && diameter <= this.outerTongueControlRadius + 0.5) {\n          this.tongueTouch = touch;\n        }\n      }\n    }\n    if (this.tongueTouch != 0) {\n      var x = this.tongueTouch.x;\n      var y = this.tongueTouch.y;\n      var index = TractUI.getIndex(x, y);\n      var diameter = TractUI.getDiameter(x, y);\n      var fromPoint = (this.outerTongueControlRadius - diameter) / (this.outerTongueControlRadius - this.innerTongueControlRadius);\n      fromPoint = Math.clamp(fromPoint, 0, 1);\n      fromPoint = Math.pow(fromPoint, 0.58) - 0.2 * (fromPoint * fromPoint - fromPoint); //horrible kludge to fit curve to straight line\n      this.tongueDiameter = Math.clamp(diameter, this.innerTongueControlRadius, this.outerTongueControlRadius);\n      //this.tongueIndex = Math.clamp(index, this.tongueLowerIndexBound, this.tongueUpperIndexBound);\n      var out = fromPoint * 0.5 * (this.tongueUpperIndexBound - this.tongueLowerIndexBound);\n      this.tongueIndex = Math.clamp(index, this.tongueIndexCentre - out, this.tongueIndexCentre + out);\n    }\n    this.setRestDiameter();\n    for (var i = 0; i < _tract.default.n; i++) {\n      _tract.default.targetDiameter[i] = _tract.default.restDiameter[i];\n    }\n\n    //other constrictions and nose\n    _tract.default.velumTarget = 0.01;\n    for (var j = 0; j < _ui.default.touchesWithMouse.length; j++) {\n      var intIndex;\n      var touch = _ui.default.touchesWithMouse[j];\n      if (!touch.alive) continue;\n      var x = touch.x;\n      var y = touch.y;\n      var index = TractUI.getIndex(x, y);\n      var diameter = TractUI.getDiameter(x, y);\n      if (index > _tract.default.noseStart && diameter < -this.noseOffset) {\n        _tract.default.velumTarget = 0.4;\n      }\n      temp.a = index;\n      temp.b = diameter;\n      if (diameter < -0.85 - this.noseOffset) continue;\n      diameter -= 0.3;\n      if (diameter < 0) diameter = 0;\n      var width = 2;\n      if (index < 25) width = 10;else if (index >= _tract.default.tipStart) width = 5;else width = 10 - 5 * (index - 25) / (_tract.default.tipStart - 25);\n      if (index >= 2 && index < _tract.default.n && y < tractCanvas.height && diameter < 3) {\n        intIndex = Math.round(index);\n        for (var i = -Math.ceil(width) - 1; i < width + 1; i++) {\n          if (intIndex + i < 0 || intIndex + i >= _tract.default.n) continue;\n          var relpos = intIndex + i - index;\n          relpos = Math.abs(relpos) - 0.5;\n          var shrink;\n          if (relpos <= 0) shrink = 0;else if (relpos > width) shrink = 1;else shrink = 0.5 * (1 - Math.cos(Math.PI * relpos / width));\n          if (diameter < _tract.default.targetDiameter[intIndex + i]) {\n            _tract.default.targetDiameter[intIndex + i] = diameter + (_tract.default.targetDiameter[intIndex + i] - diameter) * shrink;\n          }\n        }\n      }\n    }\n  },\n  handleOSCParams: function handleOSCParams() {\n    var diameter = _api.default.tract.diameter;\n    if (diameter) {\n      _tract.default.reshapeByUI = false;\n      _tract.default.diameter = diameter;\n    }\n  }\n};\nvar _default = TractUI;\nexports.default = _default;\n\n//# sourceURL=webpack:///./src/ui/tract-ui.js?");

/***/ }),

/***/ "./src/ui/ui.js":
/*!**********************!*\
  !*** ./src/ui/ui.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _tractUi = _interopRequireDefault(__webpack_require__(/*! ./tract-ui */ \"./src/ui/tract-ui.js\"));\nvar _audioSystem = _interopRequireDefault(__webpack_require__(/*! ../audio/audio-system */ \"./src/audio/audio-system.js\"));\nvar _glottis = _interopRequireDefault(__webpack_require__(/*! ../audio/glottis */ \"./src/audio/glottis.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar tractCanvas = document.getElementById(\"tractCanvas\");\nvar tractCtx = tractCanvas.getContext(\"2d\");\nfunction makeButton(x, y, width, height, text, switchedOn) {\n  var button = {};\n  button.x = x;\n  button.y = y;\n  button.width = width;\n  button.height = height;\n  button.text = text;\n  button.switchedOn = switchedOn;\n  button.draw = function (ctx) {\n    var radius = 10;\n    ctx.strokeStyle = palePink;\n    ctx.fillStyle = palePink;\n    ctx.globalAlpha = 1.0;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = 2 * radius;\n    ctx.beginPath();\n    ctx.moveTo(this.x + radius, this.y + radius);\n    ctx.lineTo(this.x + this.width - radius, this.y + radius);\n    ctx.lineTo(this.x + this.width - radius, this.y + this.height - radius);\n    ctx.lineTo(this.x + radius, this.y + this.height - radius);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.fill();\n    ctx.font = \"16px Arial\";\n    ctx.textAlign = \"center\";\n    if (this.switchedOn) {\n      ctx.fillStyle = \"orchid\";\n      ctx.globalAlpha = 0.6;\n    } else {\n      ctx.fillStyle = \"white\";\n      ctx.globalAlpha = 1.0;\n    }\n    this.drawText(ctx);\n  };\n  button.drawText = function (ctx) {\n    ctx.fillText(this.text, this.x + this.width / 2, this.y + this.height / 2 + 6);\n  };\n  button.handleTouchStart = function (touch) {\n    if (touch.x >= this.x && touch.x <= this.x + this.width && touch.y >= this.y && touch.y <= this.y + this.height) {\n      this.switchedOn = !this.switchedOn;\n    }\n  };\n  return button;\n}\nvar UI = {\n  width: 600,\n  top_margin: 5,\n  left_margin: 5,\n  inAboutScreen: false,\n  inInstructionsScreen: false,\n  instructionsLine: 0,\n  debugText: \"\",\n  init: function init() {\n    this.touchesWithMouse = [];\n    this.mouseTouch = {\n      alive: false,\n      endTime: 0\n    };\n    this.mouseDown = false;\n    this.aboutButton = makeButton(460, 392, 140, 30, \"about...\", true);\n    this.alwaysVoiceButton = makeButton(460, 428, 140, 30, \"always voice\", false);\n    this.autoWobbleButton = makeButton(460, 464, 140, 30, \"pitch wobble\", false);\n    tractCanvas.addEventListener('touchstart', UI.startTouches);\n    tractCanvas.addEventListener('touchmove', UI.moveTouches);\n    tractCanvas.addEventListener('touchend', UI.endTouches);\n    tractCanvas.addEventListener('touchcancel', UI.endTouches);\n    document.addEventListener('touchstart', function (event) {\n      event.preventDefault();\n    });\n    document.addEventListener('mousedown', function (event) {\n      UI.mouseDown = true;\n      event.preventDefault();\n      UI.startMouse(event);\n    });\n    document.addEventListener('mouseup', function (event) {\n      UI.mouseDown = false;\n      UI.endMouse(event);\n    });\n    document.addEventListener('mousemove', UI.moveMouse);\n  },\n  draw: function draw() {\n    this.alwaysVoiceButton.draw(tractCtx);\n    this.autoWobbleButton.draw(tractCtx);\n    this.aboutButton.draw(tractCtx);\n    if (this.inAboutScreen) this.drawAboutScreen();else if (this.inInstructionsScreen) this.drawInstructionsScreen();\n  },\n  drawAboutScreen: function drawAboutScreen() {\n    var ctx = tractCtx;\n    ctx.globalAlpha = 0.8;\n    ctx.fillStyle = \"white\";\n    ctx.rect(0, 0, 600, 600);\n    ctx.fill();\n    this.drawAboutText();\n  },\n  drawAboutText: function drawAboutText() {\n    var ctx = tractCtx;\n    ctx.globalAlpha = 1.0;\n    ctx.fillStyle = \"#C070C6\";\n    ctx.strokeStyle = \"#C070C6\";\n    ctx.font = \"50px Arial\";\n    ctx.lineWidth = 3;\n    ctx.textAlign = \"center\";\n    ctx.strokeText(\"P i n k   T r o m b o n e\", 300, 230);\n    ctx.fillText(\"P i n k   T r o m b o n e\", 300, 230);\n    ctx.font = \"28px Arial\";\n    ctx.fillText(\"bare-handed  speech synthesis\", 300, 330);\n    ctx.font = \"20px Arial\";\n    //ctx.fillText(\"(tap to start)\", 300, 380);   \n\n    if (isFirefox) {\n      ctx.font = \"20px Arial\";\n      ctx.fillText(\"(sorry - may work poorly with the Firefox browser)\", 300, 430);\n    }\n  },\n  drawInstructionsScreen: function drawInstructionsScreen() {\n    _audioSystem.default.mute();\n    var ctx = tractCtx;\n    ctx.globalAlpha = 0.85;\n    ctx.fillStyle = \"white\";\n    ctx.rect(0, 0, 600, 600);\n    ctx.fill();\n    ctx.globalAlpha = 1.0;\n    ctx.fillStyle = \"#C070C6\";\n    ctx.strokeStyle = \"#C070C6\";\n    ctx.font = \"24px Arial\";\n    ctx.lineWidth = 2;\n    ctx.textAlign = \"center\";\n    ctx.font = \"19px Arial\";\n    ctx.textAlign = \"left\";\n    this.instructionsLine = 0;\n    this.write(\"Sound is generated in the glottis (at the bottom left) then \");\n    this.write(\"filtered by the shape of the vocal tract. The voicebox \");\n    this.write(\"controls the pitch and intensity of the initial sound.\");\n    this.write(\"\");\n    this.write(\"Then, to talk:\");\n    this.write(\"\");\n    this.write(\"- move the body of the tongue to shape vowels\");\n    this.write(\"\");\n    this.write(\"- touch the oral cavity to narrow it, for fricative consonants\");\n    this.write(\"\");\n    this.write(\"- touch above the oral cavity to close it, for stop consonants\");\n    this.write(\"\");\n    this.write(\"- touch the nasal cavity to open the velum and let sound \");\n    this.write(\"   flow through the nose.\");\n    this.write(\"\");\n    this.write(\"\");\n    this.write(\"(tap anywhere to continue)\");\n    ctx.textAlign = \"center\";\n    ctx.fillText(\"[tap here to RESET]\", 470, 535);\n    this.instructionsLine = 18.8;\n    ctx.textAlign = \"left\";\n    this.write(\"Pink Trombone v1.1\");\n    this.write(\"by Neil Thapen\");\n    ctx.fillStyle = \"blue\";\n    ctx.globalAlpha = 0.6;\n    this.write(\"venuspatrol.nfshost.com\");\n\n    /*ctx.beginPath();\n    ctx.rect(35, 535, 230, 35);\n    ctx.rect(370, 505, 200, 50);\n    ctx.fill();*/\n\n    ctx.globalAlpha = 1.0;\n  },\n  instructionsScreenHandleTouch: function instructionsScreenHandleTouch(x, y) {\n    if (x >= 35 && x <= 265 && y >= 535 && y <= 570) window.location.href = \"http://venuspatrol.nfshost.com\";else if (x >= 370 && x <= 570 && y >= 505 && y <= 555) location.reload(false);else {\n      UI.inInstructionsScreen = false;\n      UI.aboutButton.switchedOn = true;\n      _audioSystem.default.unmute();\n    }\n  },\n  write: function write(text) {\n    tractCtx.fillText(text, 50, 100 + this.instructionsLine * 22);\n    this.instructionsLine += 1;\n    if (text == \"\") this.instructionsLine -= 0.3;\n  },\n  buttonsHandleTouchStart: function buttonsHandleTouchStart(touch) {\n    this.alwaysVoiceButton.handleTouchStart(touch);\n    window.alwaysVoice = this.alwaysVoiceButton.switchedOn;\n    this.autoWobbleButton.handleTouchStart(touch);\n    window.autoWobble = this.autoWobbleButton.switchedOn;\n    this.aboutButton.handleTouchStart(touch);\n  },\n  startTouches: function startTouches(event) {\n    event.preventDefault();\n    if (!_audioSystem.default.started) {\n      _audioSystem.default.started = true;\n      _audioSystem.default.startSound();\n    }\n    if (UI.inAboutScreen) {\n      UI.inAboutScreen = false;\n      return;\n    }\n    if (UI.inInstructionsScreen) {\n      var touches = event.changedTouches;\n      for (var j = 0; j < touches.length; j++) {\n        var x = (touches[j].pageX - UI.left_margin) / UI.width * 600;\n        var y = (touches[j].pageY - UI.top_margin) / UI.width * 600;\n      }\n      UI.instructionsScreenHandleTouch(x, y);\n      return;\n    }\n    var touches = event.changedTouches;\n    for (var j = 0; j < touches.length; j++) {\n      var touch = {};\n      touch.startTime = time;\n      touch.endTime = 0;\n      touch.fricative_intensity = 0;\n      touch.alive = true;\n      touch.id = touches[j].identifier;\n      touch.x = (touches[j].pageX - UI.left_margin) / UI.width * 600;\n      touch.y = (touches[j].pageY - UI.top_margin) / UI.width * 600;\n      touch.index = _tractUi.default.getIndex(touch.x, touch.y);\n      touch.diameter = _tractUi.default.getDiameter(touch.x, touch.y);\n      UI.touchesWithMouse.push(touch);\n      UI.buttonsHandleTouchStart(touch);\n    }\n    UI.handleTouches();\n  },\n  getTouchById: function getTouchById(id) {\n    for (var j = 0; j < UI.touchesWithMouse.length; j++) {\n      if (UI.touchesWithMouse[j].id == id && UI.touchesWithMouse[j].alive) return UI.touchesWithMouse[j];\n    }\n    return 0;\n  },\n  moveTouches: function moveTouches(event) {\n    var touches = event.changedTouches;\n    for (var j = 0; j < touches.length; j++) {\n      var touch = UI.getTouchById(touches[j].identifier);\n      if (touch != 0) {\n        touch.x = (touches[j].pageX - UI.left_margin) / UI.width * 600;\n        touch.y = (touches[j].pageY - UI.top_margin) / UI.width * 600;\n        touch.index = _tractUi.default.getIndex(touch.x, touch.y);\n        touch.diameter = _tractUi.default.getDiameter(touch.x, touch.y);\n      }\n    }\n    UI.handleTouches();\n  },\n  endTouches: function endTouches(event) {\n    var touches = event.changedTouches;\n    for (var j = 0; j < touches.length; j++) {\n      var touch = UI.getTouchById(touches[j].identifier);\n      if (touch != 0) {\n        touch.alive = false;\n        touch.endTime = time;\n      }\n    }\n    UI.handleTouches();\n    if (!UI.aboutButton.switchedOn) {\n      UI.inInstructionsScreen = true;\n    }\n  },\n  startMouse: function startMouse(event) {\n    if (!_audioSystem.default.started) {\n      _audioSystem.default.started = true;\n      _audioSystem.default.startSound();\n    }\n    if (UI.inAboutScreen) {\n      UI.inAboutScreen = false;\n      return;\n    }\n    if (UI.inInstructionsScreen) {\n      var x = (event.pageX - tractCanvas.offsetLeft) / UI.width * 600;\n      var y = (event.pageY - tractCanvas.offsetTop) / UI.width * 600;\n      UI.instructionsScreenHandleTouch(x, y);\n      return;\n    }\n    var touch = {};\n    touch.startTime = time;\n    touch.fricative_intensity = 0;\n    touch.endTime = 0;\n    touch.alive = true;\n    touch.id = \"mouse\" + Math.random();\n    touch.x = (event.pageX - tractCanvas.offsetLeft) / UI.width * 600;\n    touch.y = (event.pageY - tractCanvas.offsetTop) / UI.width * 600;\n    touch.index = _tractUi.default.getIndex(touch.x, touch.y);\n    touch.diameter = _tractUi.default.getDiameter(touch.x, touch.y);\n    UI.mouseTouch = touch;\n    UI.touchesWithMouse.push(touch);\n    UI.buttonsHandleTouchStart(touch);\n    UI.handleTouches();\n  },\n  moveMouse: function moveMouse(event) {\n    var touch = UI.mouseTouch;\n    if (!touch.alive) return;\n    touch.x = (event.pageX - tractCanvas.offsetLeft) / UI.width * 600;\n    touch.y = (event.pageY - tractCanvas.offsetTop) / UI.width * 600;\n    touch.index = _tractUi.default.getIndex(touch.x, touch.y);\n    touch.diameter = _tractUi.default.getDiameter(touch.x, touch.y);\n    UI.handleTouches();\n  },\n  endMouse: function endMouse(event) {\n    var touch = UI.mouseTouch;\n    if (!touch.alive) return;\n    touch.alive = false;\n    touch.endTime = time;\n    UI.handleTouches();\n    if (!UI.aboutButton.switchedOn) UI.inInstructionsScreen = true;\n  },\n  handleTouches: function handleTouches(event) {\n    _glottis.default.handleOSCParams();\n    _glottis.default.handleTouches();\n    _tractUi.default.handleOSCParams();\n    _tractUi.default.handleTouches();\n  },\n  updateTouches: function updateTouches() {\n    var fricativeAttackTime = 0.1;\n    for (var j = UI.touchesWithMouse.length - 1; j >= 0; j--) {\n      var touch = UI.touchesWithMouse[j];\n      if (!touch.alive && time > touch.endTime + 1) {\n        UI.touchesWithMouse.splice(j, 1);\n      } else if (touch.alive) {\n        touch.fricative_intensity = Math.clamp((time - touch.startTime) / fricativeAttackTime, 0, 1);\n      } else {\n        touch.fricative_intensity = Math.clamp(1 - (time - touch.endTime) / fricativeAttackTime, 0, 1);\n      }\n    }\n  },\n  shapeToFitScreen: function shapeToFitScreen() {\n    if (window.innerWidth <= window.innerHeight) {\n      this.width = window.innerWidth - 10;\n      this.left_margin = 5;\n      this.top_margin = 0.5 * (window.innerHeight - this.width);\n    } else {\n      this.width = window.innerHeight - 10;\n      this.left_margin = 0.5 * (window.innerWidth - this.width);\n      this.top_margin = 5;\n    }\n    document.body.style.marginLeft = this.left_margin;\n    document.body.style.marginTop = this.top_margin;\n    tractCanvas.style.width = this.width;\n    backCanvas.style.width = this.width;\n  }\n};\nvar _default = UI;\nexports.default = _default;\n\n//# sourceURL=webpack:///./src/ui/ui.js?");

/***/ })

/******/ });